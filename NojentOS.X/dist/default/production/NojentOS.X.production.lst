

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Dec  5 22:50:09 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.44
    33                           ; Generated 14/09/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _TMR0	set	4054
    67  0000                     _T0CONbits	set	4053
    68  0000                     _STKPTR	set	4092
    69  0000                     _TOSH	set	4094
    70  0000                     _TOSL	set	4093
    71  0000                     _TOSU	set	4095
    72  0000                     _INTCONbits	set	4082
    73  0000                     _LATDbits	set	3980
    74  0000                     _PORTDbits	set	3971
    75  0000                     _TRISDbits	set	3989
    76  0000                     _TMR0ON	set	32431
    77                           
    78                           ; #config settings
    79  0000                     
    80                           	psect	cinit
    81  000A0C                     __pcinit:
    82                           	opt stack 0
    83  000A0C                     start_initialization:
    84                           	opt stack 0
    85  000A0C                     __initialization:
    86                           	opt stack 0
    87                           
    88                           ; Clear objects allocated to BIGRAM (456 bytes)
    89  000A0C  EE00  F083         	lfsr	0,__pbssBIGRAM
    90  000A10  EE11 F0C8          	lfsr	1,456
    91  000A14                     clear_0:
    92  000A14  6AEE               	clrf	postinc0,c
    93  000A16  50E5               	movf	postdec1,w,c
    94  000A18  50E1               	movf	fsr1l,w,c
    95  000A1A  E1FC               	bnz	clear_0
    96  000A1C  50E2               	movf	fsr1h,w,c
    97  000A1E  E1FA               	bnz	clear_0
    98                           
    99                           ; Clear objects allocated to COMRAM (31 bytes)
   100  000A20  EE00  F039         	lfsr	0,__pbssCOMRAM
   101  000A24  0E1F               	movlw	31
   102  000A26                     clear_1:
   103  000A26  6AEE               	clrf	postinc0,c
   104  000A28  06E8               	decf	wreg,f,c
   105  000A2A  E1FD               	bnz	clear_1
   106  000A2C                     end_of_initialization:
   107                           	opt stack 0
   108  000A2C                     __end_of__initialization:
   109                           	opt stack 0
   110  000A2C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111  000A2E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112  000A30  0100               	movlb	0
   113  000A32  EF4A  F004         	goto	_main	;jump to C main() function
   114                           postinc0	equ	0xFEE
   115                           wreg	equ	0xFE8
   116                           postdec1	equ	0xFE5
   117                           fsr1h	equ	0xFE2
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  000039                     __pbssCOMRAM:
   122                           	opt stack 0
   123  000039                     _tSTATUS:
   124                           	opt stack 0
   125  000039                     	ds	1
   126  00003A                     _tBSR:
   127                           	opt stack 0
   128  00003A                     	ds	1
   129  00003B                     _tWORK:
   130                           	opt stack 0
   131  00003B                     	ds	1
   132  00003C                     _Q_DELAY:
   133                           	opt stack 0
   134  00003C                     	ds	28
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           postdec1	equ	0xFE5
   138                           fsr1h	equ	0xFE2
   139                           fsr1l	equ	0xFE1
   140                           
   141                           	psect	bssBIGRAM
   142  000083                     __pbssBIGRAM:
   143                           	opt stack 0
   144  000083                     _F_APTOS:
   145                           	opt stack 0
   146  000083                     	ds	456
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           postdec1	equ	0xFE5
   150                           fsr1h	equ	0xFE2
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	cstackBANK0
   154  000080                     __pcstackBANK0:
   155                           	opt stack 0
   156  000080                     ??_pisca_led_red:
   157  000080                     
   158                           ; 1 bytes @ 0x0
   159  000080                     	ds	1
   160  000081                     ??_pisca_led_yellow:
   161                           
   162                           ; 1 bytes @ 0x1
   163  000081                     	ds	1
   164  000082                     ??_pisca_led_green:
   165                           
   166                           ; 1 bytes @ 0x2
   167  000082                     	ds	1
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           postdec1	equ	0xFE5
   171                           fsr1h	equ	0xFE2
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	cstackCOMRAM
   175  000001                     __pcstackCOMRAM:
   176                           	opt stack 0
   177  000001                     ?_pisca_led_red:
   178                           	opt stack 0
   179  000001                     ?_pisca_led_yellow:
   180                           	opt stack 0
   181  000001                     ?_pisca_led_green:
   182                           	opt stack 0
   183  000001                     ?_nojoTaskIdle:
   184                           	opt stack 0
   185  000001                     ?___wmul:
   186                           	opt stack 0
   187  000001                     ?i2___wmul:
   188                           	opt stack 0
   189  000001                     delay_queue_create@delay_queue_handler:
   190                           	opt stack 0
   191  000001                     ___wmul@multiplier:
   192                           	opt stack 0
   193  000001                     i2___wmul@multiplier:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197  000001                     	ds	2
   198  000003                     ??_delay_queue_create:
   199  000003                     ___wmul@multiplicand:
   200                           	opt stack 0
   201  000003                     i2___wmul@multiplicand:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x2
   205  000003                     	ds	2
   206  000005                     delay_queue_create@i:
   207                           	opt stack 0
   208  000005                     ___wmul@product:
   209                           	opt stack 0
   210  000005                     i2___wmul@product:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x4
   214  000005                     	ds	2
   215  000007                     ?_priority_scheduler:
   216                           	opt stack 0
   217  000007                     nojoTaskCreate@id:
   218                           	opt stack 0
   219                           
   220                           ; 4 bytes @ 0x6
   221  000007                     	ds	4
   222  00000B                     nojoTaskCreate@prior:
   223                           	opt stack 0
   224                           
   225                           ; 4 bytes @ 0xA
   226  00000B                     	ds	4
   227  00000F                     nojoTaskCreate@task_PTR:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xE
   231  00000F                     	ds	2
   232  000011                     ??_nojoTaskCreate:
   233                           
   234                           ; 1 bytes @ 0x10
   235  000011                     	ds	2
   236  000013                     priority_scheduler@pos_next_task:
   237                           	opt stack 0
   238                           
   239                           ; 4 bytes @ 0x12
   240  000013                     	ds	2
   241  000015                     
   242                           ; 1 bytes @ 0x14
   243  000015                     	ds	2
   244  000017                     priority_scheduler@i:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x16
   248  000017                     	ds	4
   249  00001B                     ??_nojoDispatcher:
   250                           
   251                           ; 1 bytes @ 0x1A
   252  00001B                     	ds	7
   253  000022                     nojoDispatcher@state:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x21
   257  000022                     	ds	1
   258  000023                     nojoDispatcher@task_pos:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0x22
   262  000023                     	ds	4
   263  000027                     ??_timer_ISR:
   264                           
   265                           ; 1 bytes @ 0x26
   266  000027                     	ds	18
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1h	equ	0xFE2
   271                           fsr1l	equ	0xFE1
   272                           
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 6 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  2   26[None  ] int 
   285 ;; Registers used:
   286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   292 ;;      Params:         0       0       0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    7
   298 ;; This function calls:
   299 ;;		_nojoScheduler
   300 ;;		_nojoStart
   301 ;;		_nojoTaskCreate
   302 ;;		_setupTimer
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text0
   309  000894                     __ptext0:
   310                           	opt stack 0
   311  000894                     _main:
   312                           	opt stack 24
   313                           
   314                           ;main.c: 9: nojoStart();
   315                           
   316                           ;incstack = 0
   317  000894  EC94  F004         	call	_nojoStart	;wreg free
   318                           
   319                           ;main.c: 10: setupTimer();
   320  000898  EC7D  F005         	call	_setupTimer	;wreg free
   321                           
   322                           ;main.c: 13: nojoTaskCreate(1, 10, pisca_led_red);
   323  00089C  0E01               	movlw	1
   324  00089E  6E07               	movwf	nojoTaskCreate@id,c
   325  0008A0  0E00               	movlw	0
   326  0008A2  6E08               	movwf	nojoTaskCreate@id+1,c
   327  0008A4  0E00               	movlw	0
   328  0008A6  6E09               	movwf	nojoTaskCreate@id+2,c
   329  0008A8  0E00               	movlw	0
   330  0008AA  6E0A               	movwf	nojoTaskCreate@id+3,c
   331  0008AC  0E0A               	movlw	10
   332  0008AE  6E0B               	movwf	nojoTaskCreate@prior,c
   333  0008B0  0E00               	movlw	0
   334  0008B2  6E0C               	movwf	nojoTaskCreate@prior+1,c
   335  0008B4  0E00               	movlw	0
   336  0008B6  6E0D               	movwf	nojoTaskCreate@prior+2,c
   337  0008B8  0E00               	movlw	0
   338  0008BA  6E0E               	movwf	nojoTaskCreate@prior+3,c
   339  0008BC  0EAE               	movlw	low _pisca_led_red
   340  0008BE  6E0F               	movwf	nojoTaskCreate@task_PTR,c
   341  0008C0  0E0A               	movlw	high _pisca_led_red
   342  0008C2  6E10               	movwf	nojoTaskCreate@task_PTR+1,c
   343  0008C4  EC99  F002         	call	_nojoTaskCreate	;wreg free
   344                           
   345                           ;main.c: 14: nojoTaskCreate(2, 5, pisca_led_yellow);
   346  0008C8  0E02               	movlw	2
   347  0008CA  6E07               	movwf	nojoTaskCreate@id,c
   348  0008CC  0E00               	movlw	0
   349  0008CE  6E08               	movwf	nojoTaskCreate@id+1,c
   350  0008D0  0E00               	movlw	0
   351  0008D2  6E09               	movwf	nojoTaskCreate@id+2,c
   352  0008D4  0E00               	movlw	0
   353  0008D6  6E0A               	movwf	nojoTaskCreate@id+3,c
   354  0008D8  0E05               	movlw	5
   355  0008DA  6E0B               	movwf	nojoTaskCreate@prior,c
   356  0008DC  0E00               	movlw	0
   357  0008DE  6E0C               	movwf	nojoTaskCreate@prior+1,c
   358  0008E0  0E00               	movlw	0
   359  0008E2  6E0D               	movwf	nojoTaskCreate@prior+2,c
   360  0008E4  0E00               	movlw	0
   361  0008E6  6E0E               	movwf	nojoTaskCreate@prior+3,c
   362  0008E8  0E60               	movlw	low _pisca_led_yellow
   363  0008EA  6E0F               	movwf	nojoTaskCreate@task_PTR,c
   364  0008EC  0E0A               	movlw	high _pisca_led_yellow
   365  0008EE  6E10               	movwf	nojoTaskCreate@task_PTR+1,c
   366  0008F0  EC99  F002         	call	_nojoTaskCreate	;wreg free
   367                           
   368                           ;main.c: 15: nojoTaskCreate(3, 7, pisca_led_green);
   369  0008F4  0E03               	movlw	3
   370  0008F6  6E07               	movwf	nojoTaskCreate@id,c
   371  0008F8  0E00               	movlw	0
   372  0008FA  6E08               	movwf	nojoTaskCreate@id+1,c
   373  0008FC  0E00               	movlw	0
   374  0008FE  6E09               	movwf	nojoTaskCreate@id+2,c
   375  000900  0E00               	movlw	0
   376  000902  6E0A               	movwf	nojoTaskCreate@id+3,c
   377  000904  0E07               	movlw	7
   378  000906  6E0B               	movwf	nojoTaskCreate@prior,c
   379  000908  0E00               	movlw	0
   380  00090A  6E0C               	movwf	nojoTaskCreate@prior+1,c
   381  00090C  0E00               	movlw	0
   382  00090E  6E0D               	movwf	nojoTaskCreate@prior+2,c
   383  000910  0E00               	movlw	0
   384  000912  6E0E               	movwf	nojoTaskCreate@prior+3,c
   385  000914  0E36               	movlw	low _pisca_led_green
   386  000916  6E0F               	movwf	nojoTaskCreate@task_PTR,c
   387  000918  0E0A               	movlw	high _pisca_led_green
   388  00091A  6E10               	movwf	nojoTaskCreate@task_PTR+1,c
   389  00091C  EC99  F002         	call	_nojoTaskCreate	;wreg free
   390                           
   391                           ;main.c: 17: nojoScheduler();
   392  000920  EC90  F005         	call	_nojoScheduler	;wreg free
   393  000924                     
   394                           ;main.c: 20: {
   395                           ;main.c: 21: __nop();
   396  000924  F000               	nop	
   397  000926  D7FE               	goto	l27
   398  000928                     __end_of_main:
   399                           	opt stack 0
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1h	equ	0xFE2
   404                           fsr1l	equ	0xFE1
   405                           
   406 ;; *************** function _setupTimer *****************
   407 ;; Defined at:
   408 ;;		line 4 in file "timer.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    5
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text1
   437  000AFA                     __ptext1:
   438                           	opt stack 0
   439  000AFA                     _setupTimer:
   440                           	opt stack 25
   441                           
   442                           ;timer.c: 7: T0CONbits.T0CS = 0;
   443                           
   444                           ;incstack = 0
   445  000AFA  9AD5               	bcf	4053,5,c	;volatile
   446                           
   447                           ;timer.c: 8: T0CONbits.T08BIT = 0;
   448  000AFC  9CD5               	bcf	4053,6,c	;volatile
   449                           
   450                           ;timer.c: 9: T0CONbits.PSA = 0;
   451  000AFE  96D5               	bcf	4053,3,c	;volatile
   452                           
   453                           ;timer.c: 10: T0CONbits.T0PS = 0b010;
   454  000B00  50D5               	movf	4053,w,c	;volatile
   455  000B02  0BF8               	andlw	-8
   456  000B04  0902               	iorlw	2
   457  000B06  6ED5               	movwf	4053,c	;volatile
   458                           
   459                           ;timer.c: 11: INTCONbits.TMR0IE = 1;
   460  000B08  8AF2               	bsf	intcon,5,c	;volatile
   461                           
   462                           ;timer.c: 12: INTCONbits.TMR0IF = 0;
   463  000B0A  94F2               	bcf	intcon,2,c	;volatile
   464                           
   465                           ;timer.c: 13: INTCONbits.PEIE = 1;
   466  000B0C  8CF2               	bsf	intcon,6,c	;volatile
   467  000B0E  0012               	return		;funcret
   468  000B10                     __end_of_setupTimer:
   469                           	opt stack 0
   470                           intcon	equ	0xFF2
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1h	equ	0xFE2
   475                           fsr1l	equ	0xFE1
   476                           
   477 ;; *************** function _nojoTaskCreate *****************
   478 ;; Defined at:
   479 ;;		line 25 in file "kernel.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  id              4    6[COMRAM] unsigned long 
   482 ;;  prior           4   10[COMRAM] unsigned long 
   483 ;;  task_PTR        2   14[COMRAM] PTR FTN()PTR void 
   484 ;;		 -> pisca_led_green(2), pisca_led_yellow(2), pisca_led_red(2), 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   496 ;;      Params:        10       0       0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0
   498 ;;      Temps:          4       0       0       0       0       0       0
   499 ;;      Totals:        14       0       0       0       0       0       0
   500 ;;Total ram usage:       14 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    6
   503 ;; This function calls:
   504 ;;		___wmul
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text2
   511  000532                     __ptext2:
   512                           	opt stack 0
   513  000532                     _nojoTaskCreate:
   514                           	opt stack 24
   515                           
   516                           ;kernel.c: 27: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_ID = id;
   517                           
   518                           ;incstack = 0
   519  000532  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   520  000536  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   521  00053A  0E00               	movlw	0
   522  00053C  6E04               	movwf	___wmul@multiplicand+1,c
   523  00053E  0E70               	movlw	112
   524  000540  6E03               	movwf	___wmul@multiplicand,c
   525  000542  EC44  F005         	call	___wmul	;wreg free
   526  000546  0E83               	movlw	low _F_APTOS
   527  000548  2401               	addwf	?___wmul,w,c
   528  00054A  6ED9               	movwf	fsr2l,c
   529  00054C  0E00               	movlw	high _F_APTOS
   530  00054E  2002               	addwfc	?___wmul+1,w,c
   531  000550  6EDA               	movwf	fsr2h,c
   532  000552  C007  FFDE         	movff	nojoTaskCreate@id,postinc2
   533  000556  C008  FFDE         	movff	nojoTaskCreate@id+1,postinc2
   534  00055A  C009  FFDE         	movff	nojoTaskCreate@id+2,postinc2
   535  00055E  C00A  FFDE         	movff	nojoTaskCreate@id+3,postinc2
   536                           
   537                           ;kernel.c: 28: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_PRIOR = prior;
   538  000562  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   539  000566  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   540  00056A  0E00               	movlw	0
   541  00056C  6E04               	movwf	___wmul@multiplicand+1,c
   542  00056E  0E70               	movlw	112
   543  000570  6E03               	movwf	___wmul@multiplicand,c
   544  000572  EC44  F005         	call	___wmul	;wreg free
   545  000576  0E04               	movlw	4
   546  000578  2601               	addwf	?___wmul,f,c
   547  00057A  0E00               	movlw	0
   548  00057C  2202               	addwfc	?___wmul+1,f,c
   549  00057E  0E83               	movlw	low _F_APTOS
   550  000580  2401               	addwf	?___wmul,w,c
   551  000582  6ED9               	movwf	fsr2l,c
   552  000584  0E00               	movlw	high _F_APTOS
   553  000586  2002               	addwfc	?___wmul+1,w,c
   554  000588  6EDA               	movwf	fsr2h,c
   555  00058A  C00B  FFDE         	movff	nojoTaskCreate@prior,postinc2
   556  00058E  C00C  FFDE         	movff	nojoTaskCreate@prior+1,postinc2
   557  000592  C00D  FFDE         	movff	nojoTaskCreate@prior+2,postinc2
   558  000596  C00E  FFDE         	movff	nojoTaskCreate@prior+3,postinc2
   559                           
   560                           ;kernel.c: 29: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_STATE = READY;
   561  00059A  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   562  00059E  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   563  0005A2  0E00               	movlw	0
   564  0005A4  6E04               	movwf	___wmul@multiplicand+1,c
   565  0005A6  0E70               	movlw	112
   566  0005A8  6E03               	movwf	___wmul@multiplicand,c
   567  0005AA  EC44  F005         	call	___wmul	;wreg free
   568  0005AE  0E08               	movlw	8
   569  0005B0  2601               	addwf	?___wmul,f,c
   570  0005B2  0E00               	movlw	0
   571  0005B4  2202               	addwfc	?___wmul+1,f,c
   572  0005B6  0E83               	movlw	low _F_APTOS
   573  0005B8  2401               	addwf	?___wmul,w,c
   574  0005BA  6ED9               	movwf	fsr2l,c
   575  0005BC  0E00               	movlw	high _F_APTOS
   576  0005BE  2002               	addwfc	?___wmul+1,w,c
   577  0005C0  6EDA               	movwf	fsr2h,c
   578  0005C2  0E00               	movlw	0
   579  0005C4  6EDF               	movwf	indf2,c
   580                           
   581                           ;kernel.c: 30: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_PTR = task_PTR;
   582  0005C6  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   583  0005CA  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   584  0005CE  0E00               	movlw	0
   585  0005D0  6E04               	movwf	___wmul@multiplicand+1,c
   586  0005D2  0E70               	movlw	112
   587  0005D4  6E03               	movwf	___wmul@multiplicand,c
   588  0005D6  EC44  F005         	call	___wmul	;wreg free
   589  0005DA  0E09               	movlw	9
   590  0005DC  2601               	addwf	?___wmul,f,c
   591  0005DE  0E00               	movlw	0
   592  0005E0  2202               	addwfc	?___wmul+1,f,c
   593  0005E2  0E83               	movlw	low _F_APTOS
   594  0005E4  2401               	addwf	?___wmul,w,c
   595  0005E6  6ED9               	movwf	fsr2l,c
   596  0005E8  0E00               	movlw	high _F_APTOS
   597  0005EA  2002               	addwfc	?___wmul+1,w,c
   598  0005EC  6EDA               	movwf	fsr2h,c
   599  0005EE  C00F  FFDE         	movff	nojoTaskCreate@task_PTR,postinc2
   600  0005F2  C010  FFDD         	movff	nojoTaskCreate@task_PTR+1,postdec2
   601                           
   602                           ;kernel.c: 31: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_CTX.ctx_STACK.task_stack
      +                          [0].TOSL = (uint32_t) task_PTR;
   603  0005F6  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   604  0005FA  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   605  0005FE  0E00               	movlw	0
   606  000600  6E04               	movwf	___wmul@multiplicand+1,c
   607  000602  0E70               	movlw	112
   608  000604  6E03               	movwf	___wmul@multiplicand,c
   609  000606  EC44  F005         	call	___wmul	;wreg free
   610  00060A  0E12               	movlw	18
   611  00060C  2601               	addwf	?___wmul,f,c
   612  00060E  0E00               	movlw	0
   613  000610  2202               	addwfc	?___wmul+1,f,c
   614  000612  0E83               	movlw	low _F_APTOS
   615  000614  2401               	addwf	?___wmul,w,c
   616  000616  6ED9               	movwf	fsr2l,c
   617  000618  0E00               	movlw	high _F_APTOS
   618  00061A  2002               	addwfc	?___wmul+1,w,c
   619  00061C  6EDA               	movwf	fsr2h,c
   620  00061E  C00F  FFDF         	movff	nojoTaskCreate@task_PTR,indf2
   621                           
   622                           ;kernel.c: 32: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_CTX.ctx_STACK.task_stack
      +                          [0].TOSH = (uint32_t) task_PTR >> 8;
   623  000622  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   624  000626  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   625  00062A  0E00               	movlw	0
   626  00062C  6E04               	movwf	___wmul@multiplicand+1,c
   627  00062E  0E70               	movlw	112
   628  000630  6E03               	movwf	___wmul@multiplicand,c
   629  000632  EC44  F005         	call	___wmul	;wreg free
   630  000636  0E13               	movlw	19
   631  000638  2601               	addwf	?___wmul,f,c
   632  00063A  0E00               	movlw	0
   633  00063C  2202               	addwfc	?___wmul+1,f,c
   634  00063E  0E83               	movlw	low _F_APTOS
   635  000640  2401               	addwf	?___wmul,w,c
   636  000642  6ED9               	movwf	fsr2l,c
   637  000644  0E00               	movlw	high _F_APTOS
   638  000646  2002               	addwfc	?___wmul+1,w,c
   639  000648  6EDA               	movwf	fsr2h,c
   640  00064A  500F               	movf	nojoTaskCreate@task_PTR,w,c
   641  00064C  6E11               	movwf	??_nojoTaskCreate& (0+255),c
   642  00064E  5010               	movf	nojoTaskCreate@task_PTR+1,w,c
   643  000650  6E12               	movwf	(??_nojoTaskCreate+1)& (0+255),c
   644  000652  6A13               	clrf	(??_nojoTaskCreate+2)& (0+255),c
   645  000654  6A14               	clrf	(??_nojoTaskCreate+3)& (0+255),c
   646  000656  C012  F011         	movff	??_nojoTaskCreate+1,??_nojoTaskCreate
   647  00065A  C013  F012         	movff	??_nojoTaskCreate+2,??_nojoTaskCreate+1
   648  00065E  C014  F013         	movff	??_nojoTaskCreate+3,??_nojoTaskCreate+2
   649  000662  6A14               	clrf	??_nojoTaskCreate+3,c
   650  000664  5011               	movf	??_nojoTaskCreate,w,c
   651  000666  6EDF               	movwf	indf2,c
   652                           
   653                           ;kernel.c: 33: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_CTX.ctx_STACK.task_stack
      +                          [0].TOSU = (uint32_t) task_PTR >> 16;
   654  000668  500F               	movf	nojoTaskCreate@task_PTR,w,c
   655  00066A  6E11               	movwf	??_nojoTaskCreate& (0+255),c
   656  00066C  5010               	movf	nojoTaskCreate@task_PTR+1,w,c
   657  00066E  6E12               	movwf	(??_nojoTaskCreate+1)& (0+255),c
   658  000670  6A13               	clrf	(??_nojoTaskCreate+2)& (0+255),c
   659  000672  6A14               	clrf	(??_nojoTaskCreate+3)& (0+255),c
   660  000674  0E11               	movlw	17
   661  000676  D005               	goto	u280
   662  000678                     u285:
   663  000678  90D8               	bcf	status,0,c
   664  00067A  3214               	rrcf	??_nojoTaskCreate+3,f,c
   665  00067C  3213               	rrcf	??_nojoTaskCreate+2,f,c
   666  00067E  3212               	rrcf	??_nojoTaskCreate+1,f,c
   667  000680  3211               	rrcf	??_nojoTaskCreate,f,c
   668  000682                     u280:
   669  000682  2EE8               	decfsz	wreg,f,c
   670  000684  D7F9               	goto	u285
   671  000686  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   672  00068A  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   673  00068E  0E00               	movlw	0
   674  000690  6E04               	movwf	___wmul@multiplicand+1,c
   675  000692  0E70               	movlw	112
   676  000694  6E03               	movwf	___wmul@multiplicand,c
   677  000696  EC44  F005         	call	___wmul	;wreg free
   678  00069A  0E14               	movlw	20
   679  00069C  2601               	addwf	?___wmul,f,c
   680  00069E  0E00               	movlw	0
   681  0006A0  2202               	addwfc	?___wmul+1,f,c
   682  0006A2  0E83               	movlw	low _F_APTOS
   683  0006A4  2401               	addwf	?___wmul,w,c
   684  0006A6  6ED9               	movwf	fsr2l,c
   685  0006A8  0E00               	movlw	high _F_APTOS
   686  0006AA  2002               	addwfc	?___wmul+1,w,c
   687  0006AC  6EDA               	movwf	fsr2h,c
   688  0006AE  50DF               	movf	223,w,c
   689  0006B0  1811               	xorwf	??_nojoTaskCreate,w,c
   690  0006B2  0BE0               	andlw	-32
   691  0006B4  1811               	xorwf	??_nojoTaskCreate,w,c
   692  0006B6  6EDF               	movwf	223,c
   693                           
   694                           ;kernel.c: 34: F_APTOS.FILA_APTOS[F_APTOS.tasks_installed].task_CTX.ctx_STACK.stack_size
      +                           = 1;
   695  0006B8  C243  F001         	movff	_F_APTOS+448,___wmul@multiplier
   696  0006BC  C244  F002         	movff	_F_APTOS+449,___wmul@multiplier+1
   697  0006C0  0E00               	movlw	0
   698  0006C2  6E04               	movwf	___wmul@multiplicand+1,c
   699  0006C4  0E70               	movlw	112
   700  0006C6  6E03               	movwf	___wmul@multiplicand,c
   701  0006C8  EC44  F005         	call	___wmul	;wreg free
   702  0006CC  0E6F               	movlw	111
   703  0006CE  2601               	addwf	?___wmul,f,c
   704  0006D0  0E00               	movlw	0
   705  0006D2  2202               	addwfc	?___wmul+1,f,c
   706  0006D4  0E83               	movlw	low _F_APTOS
   707  0006D6  2401               	addwf	?___wmul,w,c
   708  0006D8  6ED9               	movwf	fsr2l,c
   709  0006DA  0E00               	movlw	high _F_APTOS
   710  0006DC  2002               	addwfc	?___wmul+1,w,c
   711  0006DE  6EDA               	movwf	fsr2h,c
   712  0006E0  0E01               	movlw	1
   713  0006E2  6EDF               	movwf	indf2,c
   714                           
   715                           ;kernel.c: 35: F_APTOS.tasks_installed++;
   716  0006E4  EE22  F043         	lfsr	2,_F_APTOS+448
   717  0006E8  2ADE               	incf	postinc2,f,c
   718  0006EA  0E00               	movlw	0
   719  0006EC  22DE               	addwfc	postinc2,f,c
   720  0006EE  22DE               	addwfc	postinc2,f,c
   721  0006F0  22DE               	addwfc	postinc2,f,c
   722  0006F2  0012               	return		;funcret
   723  0006F4                     __end_of_nojoTaskCreate:
   724                           	opt stack 0
   725                           intcon	equ	0xFF2
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1h	equ	0xFE2
   730                           fsr1l	equ	0xFE1
   731                           indf2	equ	0xFDF
   732                           postinc2	equ	0xFDE
   733                           postdec2	equ	0xFDD
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8
   737                           
   738 ;; *************** function ___wmul *****************
   739 ;; Defined at:
   740 ;;		line 15 in file "/Applications/microchip/xc8/v1.44/sources/common/Umul16.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  multiplier      2    0[COMRAM] unsigned int 
   743 ;;  multiplicand    2    2[COMRAM] unsigned int 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  product         2    4[COMRAM] unsigned int 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  2    0[COMRAM] unsigned int 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, prodl, prodh
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         4       0       0       0       0       0       0
   756 ;;      Locals:         2       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0
   758 ;;      Totals:         6       0       0       0       0       0       0
   759 ;;Total ram usage:        6 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    5
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_nojoTaskCreate
   766 ;;		_RR_scheduler
   767 ;;		_sem_wait
   768 ;;		_sem_post
   769 ;;		_delay_queue_remove
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text3
   774  000A88                     __ptext3:
   775                           	opt stack 0
   776  000A88                     ___wmul:
   777                           	opt stack 24
   778                           
   779                           ;incstack = 0
   780  000A88  5001               	movf	___wmul@multiplier,w,c
   781  000A8A  0203               	mulwf	___wmul@multiplicand,c
   782  000A8C  CFF3 F005          	movff	prodl,___wmul@product
   783  000A90  CFF4 F006          	movff	prodh,___wmul@product+1
   784  000A94  5001               	movf	___wmul@multiplier,w,c
   785  000A96  0204               	mulwf	___wmul@multiplicand+1,c
   786  000A98  50F3               	movf	prodl,w,c
   787  000A9A  2606               	addwf	___wmul@product+1,f,c
   788  000A9C  5002               	movf	___wmul@multiplier+1,w,c
   789  000A9E  0203               	mulwf	___wmul@multiplicand,c
   790  000AA0  50F3               	movf	prodl,w,c
   791  000AA2  2606               	addwf	___wmul@product+1,f,c
   792  000AA4  C005  F001         	movff	___wmul@product,?___wmul
   793  000AA8  C006  F002         	movff	___wmul@product+1,?___wmul+1
   794  000AAC  0012               	return	
   795  000AAE                     __end_of___wmul:
   796                           	opt stack 0
   797                           prodh	equ	0xFF4
   798                           prodl	equ	0xFF3
   799                           intcon	equ	0xFF2
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1h	equ	0xFE2
   804                           fsr1l	equ	0xFE1
   805                           indf2	equ	0xFDF
   806                           postinc2	equ	0xFDE
   807                           postdec2	equ	0xFDD
   808                           fsr2h	equ	0xFDA
   809                           fsr2l	equ	0xFD9
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _nojoStart *****************
   813 ;; Defined at:
   814 ;;		line 8 in file "kernel.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   828 ;;      Params:         0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    6
   835 ;; This function calls:
   836 ;;		_delay_queue_create
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text4
   843  000928                     __ptext4:
   844                           	opt stack 0
   845  000928                     _nojoStart:
   846                           	opt stack 24
   847                           
   848                           ;kernel.c: 13: F_APTOS.FILA_APTOS[0].task_ID = 0;
   849                           
   850                           ;incstack = 0
   851  000928  0E00               	movlw	0
   852  00092A  CFE8 F083          	movff	wreg,_F_APTOS
   853  00092E  0E00               	movlw	0
   854  000930  CFE8 F084          	movff	wreg,_F_APTOS+1
   855  000934  0E00               	movlw	0
   856  000936  CFE8 F085          	movff	wreg,_F_APTOS+2
   857  00093A  0E00               	movlw	0
   858  00093C  CFE8 F086          	movff	wreg,_F_APTOS+3
   859                           
   860                           ;kernel.c: 14: F_APTOS.FILA_APTOS[0].task_PRIOR = 0;
   861  000940  0E00               	movlw	0
   862  000942  CFE8 F087          	movff	wreg,_F_APTOS+4
   863  000946  0E00               	movlw	0
   864  000948  CFE8 F088          	movff	wreg,_F_APTOS+5
   865  00094C  0E00               	movlw	0
   866  00094E  CFE8 F089          	movff	wreg,_F_APTOS+6
   867  000952  0E00               	movlw	0
   868  000954  CFE8 F08A          	movff	wreg,_F_APTOS+7
   869                           
   870                           ;kernel.c: 15: F_APTOS.FILA_APTOS[0].task_STATE = READY;
   871  000958  0E00               	movlw	0
   872  00095A  CFE8 F08B          	movff	wreg,_F_APTOS+8
   873                           
   874                           ;kernel.c: 16: F_APTOS.FILA_APTOS[0].task_PTR = nojoTaskIdle;
   875  00095E  0E10               	movlw	low _nojoTaskIdle
   876  000960  CFE8 F08C          	movff	wreg,_F_APTOS+9
   877  000964  0E0B               	movlw	high _nojoTaskIdle
   878  000966  CFE8 F08D          	movff	wreg,_F_APTOS+10
   879                           
   880                           ;kernel.c: 17: F_APTOS.tasks_installed = 1;
   881  00096A  0E01               	movlw	1
   882  00096C  CFE8 F243          	movff	wreg,_F_APTOS+448
   883  000970  0E00               	movlw	0
   884  000972  CFE8 F244          	movff	wreg,_F_APTOS+449
   885  000976  0E00               	movlw	0
   886  000978  CFE8 F245          	movff	wreg,_F_APTOS+450
   887  00097C  0E00               	movlw	0
   888  00097E  CFE8 F246          	movff	wreg,_F_APTOS+451
   889                           
   890                           ;kernel.c: 18: F_APTOS.task_running = 0;
   891  000982  0E00               	movlw	0
   892  000984  CFE8 F247          	movff	wreg,_F_APTOS+452
   893  000988  0E00               	movlw	0
   894  00098A  CFE8 F248          	movff	wreg,_F_APTOS+453
   895  00098E  0E00               	movlw	0
   896  000990  CFE8 F249          	movff	wreg,_F_APTOS+454
   897  000994  0E00               	movlw	0
   898  000996  CFE8 F24A          	movff	wreg,_F_APTOS+455
   899                           
   900                           ;kernel.c: 19: delay_queue_create(&Q_DELAY);
   901  00099A  0E3C               	movlw	low _Q_DELAY
   902  00099C  6E01               	movwf	delay_queue_create@delay_queue_handler,c
   903  00099E  0E00               	movlw	high _Q_DELAY
   904  0009A0  6E02               	movwf	delay_queue_create@delay_queue_handler+1,c
   905  0009A2  ECD5  F004         	call	_delay_queue_create	;wreg free
   906                           
   907                           ;kernel.c: 22: INTCONbits.GIE = 1;
   908  0009A6  8EF2               	bsf	intcon,7,c	;volatile
   909  0009A8  0012               	return		;funcret
   910  0009AA                     __end_of_nojoStart:
   911                           	opt stack 0
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           intcon	equ	0xFF2
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1h	equ	0xFE2
   919                           fsr1l	equ	0xFE1
   920                           indf2	equ	0xFDF
   921                           postinc2	equ	0xFDE
   922                           postdec2	equ	0xFDD
   923                           fsr2h	equ	0xFDA
   924                           fsr2l	equ	0xFD9
   925                           status	equ	0xFD8
   926                           
   927 ;; *************** function _delay_queue_create *****************
   928 ;; Defined at:
   929 ;;		line 8 in file "delay.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  delay_queue_    2    0[COMRAM] PTR struct queue_delay
   932 ;;		 -> Q_DELAY(28), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  i               2    4[COMRAM] int 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   944 ;;      Params:         2       0       0       0       0       0       0
   945 ;;      Locals:         2       0       0       0       0       0       0
   946 ;;      Temps:          2       0       0       0       0       0       0
   947 ;;      Totals:         6       0       0       0       0       0       0
   948 ;;Total ram usage:        6 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    5
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_nojoStart
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text5
   959  0009AA                     __ptext5:
   960                           	opt stack 0
   961  0009AA                     _delay_queue_create:
   962                           	opt stack 24
   963                           
   964                           ;delay.c: 9: int i;
   965                           ;delay.c: 10: delay_queue_handler->delay_queue_size = 0;
   966                           
   967                           ;incstack = 0
   968  0009AA  EE20 F018          	lfsr	2,24
   969  0009AE  5001               	movf	delay_queue_create@delay_queue_handler,w,c
   970  0009B0  26D9               	addwf	fsr2l,f,c
   971  0009B2  5002               	movf	delay_queue_create@delay_queue_handler+1,w,c
   972  0009B4  22DA               	addwfc	fsr2h,f,c
   973  0009B6  6ADE               	clrf	postinc2,c
   974  0009B8  6ADE               	clrf	postinc2,c
   975  0009BA  6ADE               	clrf	postinc2,c
   976  0009BC  6ADD               	clrf	postdec2,c
   977                           
   978                           ;delay.c: 11: for(i=0;i<3;i++)
   979  0009BE  0E00               	movlw	0
   980  0009C0  6E06               	movwf	delay_queue_create@i+1,c
   981  0009C2  0E00               	movlw	0
   982  0009C4  6E05               	movwf	delay_queue_create@i,c
   983  0009C6                     l1091:
   984  0009C6  BE06               	btfsc	delay_queue_create@i+1,7,c
   985  0009C8  D006               	goto	l220
   986  0009CA  5006               	movf	delay_queue_create@i+1,w,c
   987  0009CC  E11E               	bnz	l222
   988  0009CE  0E03               	movlw	3
   989  0009D0  5C05               	subwf	delay_queue_create@i,w,c
   990  0009D2  B0D8               	btfsc	status,0,c
   991  0009D4  0012               	return	
   992  0009D6                     l220:
   993                           
   994                           ;delay.c: 12: delay_queue_handler->delay_QUEUE[i].task_pos_ready_queue = 0;
   995  0009D6  C005  F003         	movff	delay_queue_create@i,??_delay_queue_create
   996  0009DA  C006  F004         	movff	delay_queue_create@i+1,??_delay_queue_create+1
   997  0009DE  90D8               	bcf	status,0,c
   998  0009E0  3603               	rlcf	??_delay_queue_create,f,c
   999  0009E2  3604               	rlcf	??_delay_queue_create+1,f,c
  1000  0009E4  90D8               	bcf	status,0,c
  1001  0009E6  3603               	rlcf	??_delay_queue_create,f,c
  1002  0009E8  3604               	rlcf	??_delay_queue_create+1,f,c
  1003  0009EA  90D8               	bcf	status,0,c
  1004  0009EC  3603               	rlcf	??_delay_queue_create,f,c
  1005  0009EE  3604               	rlcf	??_delay_queue_create+1,f,c
  1006  0009F0  5003               	movf	??_delay_queue_create,w,c
  1007  0009F2  2401               	addwf	delay_queue_create@delay_queue_handler,w,c
  1008  0009F4  6ED9               	movwf	fsr2l,c
  1009  0009F6  5004               	movf	??_delay_queue_create+1,w,c
  1010  0009F8  2002               	addwfc	delay_queue_create@delay_queue_handler+1,w,c
  1011  0009FA  6EDA               	movwf	fsr2h,c
  1012  0009FC  6ADE               	clrf	postinc2,c
  1013  0009FE  6ADE               	clrf	postinc2,c
  1014  000A00  6ADE               	clrf	postinc2,c
  1015  000A02  6ADD               	clrf	postdec2,c
  1016  000A04  4A05               	infsnz	delay_queue_create@i,f,c
  1017  000A06  2A06               	incf	delay_queue_create@i+1,f,c
  1018  000A08  D7DE               	goto	l1091
  1019  000A0A                     l222:
  1020  000A0A  0012               	return		;funcret
  1021  000A0C                     __end_of_delay_queue_create:
  1022                           	opt stack 0
  1023                           prodh	equ	0xFF4
  1024                           prodl	equ	0xFF3
  1025                           intcon	equ	0xFF2
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1h	equ	0xFE2
  1030                           fsr1l	equ	0xFE1
  1031                           indf2	equ	0xFDF
  1032                           postinc2	equ	0xFDE
  1033                           postdec2	equ	0xFDD
  1034                           fsr2h	equ	0xFDA
  1035                           fsr2l	equ	0xFD9
  1036                           status	equ	0xFD8
  1037                           
  1038 ;; *************** function _nojoScheduler *****************
  1039 ;; Defined at:
  1040 ;;		line 17 in file "timer.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1054 ;;      Params:         0       0       0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    5
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;;		_delay_queue_insert
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text6
  1070  000B20                     __ptext6:
  1071                           	opt stack 0
  1072  000B20                     _nojoScheduler:
  1073                           	opt stack 25
  1074                           
  1075                           ;timer.c: 19: TMR0 = 64911;
  1076                           
  1077                           ;incstack = 0
  1078  000B20  0EFD               	movlw	253
  1079  000B22  6ED7               	movwf	4055,c	;volatile
  1080  000B24  0E8F               	movlw	143
  1081  000B26  6ED6               	movwf	4054,c	;volatile
  1082                           
  1083                           ;timer.c: 22: T0CONbits.TMR0ON = 1;
  1084  000B28  8ED5               	bsf	4053,7,c	;volatile
  1085  000B2A  0012               	return		;funcret
  1086  000B2C                     __end_of_nojoScheduler:
  1087                           	opt stack 0
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           intcon	equ	0xFF2
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec1	equ	0xFE5
  1094                           fsr1h	equ	0xFE2
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           postinc2	equ	0xFDE
  1098                           postdec2	equ	0xFDD
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _pisca_led_red *****************
  1104 ;; Defined at:
  1105 ;;		line 3 in file "tasks.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2    8[None  ] PTR void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1119 ;;      Params:         0       0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0
  1121 ;;      Temps:          0       1       0       0       0       0       0
  1122 ;;      Totals:         0       1       0       0       0       0       0
  1123 ;;Total ram usage:        1 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    4
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text7
  1134  000AAE                     __ptext7:
  1135                           	opt stack 0
  1136  000AAE                     _pisca_led_red:
  1137                           	opt stack 24
  1138                           
  1139                           ;tasks.c: 5: TRISDbits.RD0 = 0;
  1140                           
  1141                           ;incstack = 0
  1142  000AAE  9095               	bcf	3989,0,c	;volatile
  1143                           
  1144                           ;tasks.c: 6: PORTDbits.RD0 = 0;
  1145  000AB0  9083               	bcf	3971,0,c	;volatile
  1146  000AB2                     
  1147                           ;tasks.c: 9: {
  1148                           ;tasks.c: 10: PORTDbits.RD0 = ~LATDbits.LD0;
  1149  000AB2  A08C               	btfss	3980,0,c	;volatile
  1150  000AB4  D002               	goto	u38_20
  1151  000AB6  0E01               	movlw	1
  1152  000AB8  D001               	goto	u38_26
  1153  000ABA                     u38_20:
  1154  000ABA  0E00               	movlw	0
  1155  000ABC                     u38_26:
  1156  000ABC  0AFF               	xorlw	255
  1157  000ABE  0100               	movlb	0	; () banked
  1158  000AC0  6F80               	movwf	??_pisca_led_red& (0+255),b
  1159  000AC2  5083               	movf	3971,w,c	;volatile
  1160  000AC4  1980               	xorwf	??_pisca_led_red& (0+255),w,b
  1161  000AC6  0BFE               	andlw	-2
  1162  000AC8  1980               	xorwf	??_pisca_led_red& (0+255),w,b
  1163  000ACA  6E83               	movwf	3971,c	;volatile
  1164  000ACC  F000               	nop		;# 
  1165  000ACE  F000               	nop		;# 
  1166  000AD0  F000               	nop		;# 
  1167  000AD2  D7EF               	goto	l39
  1168  000AD4                     __end_of_pisca_led_red:
  1169                           	opt stack 0
  1170                           prodh	equ	0xFF4
  1171                           prodl	equ	0xFF3
  1172                           intcon	equ	0xFF2
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           postdec1	equ	0xFE5
  1176                           fsr1h	equ	0xFE2
  1177                           fsr1l	equ	0xFE1
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _pisca_led_yellow *****************
  1186 ;; Defined at:
  1187 ;;		line 19 in file "tasks.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2   10[None  ] PTR void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0
  1203 ;;      Temps:          0       1       0       0       0       0       0
  1204 ;;      Totals:         0       1       0       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    4
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text8
  1216  000A60                     __ptext8:
  1217                           	opt stack 0
  1218  000A60                     _pisca_led_yellow:
  1219                           	opt stack 24
  1220                           
  1221                           ;tasks.c: 21: TRISDbits.RD1 = 0;
  1222                           
  1223                           ;incstack = 0
  1224  000A60  9295               	bcf	3989,1,c	;volatile
  1225                           
  1226                           ;tasks.c: 22: PORTDbits.RD1 = 0;
  1227  000A62  9283               	bcf	3971,1,c	;volatile
  1228  000A64                     
  1229                           ;tasks.c: 25: {
  1230                           ;tasks.c: 26: PORTDbits.RD1 = ~LATDbits.LD1;
  1231  000A64  A28C               	btfss	3980,1,c	;volatile
  1232  000A66  D002               	goto	u39_20
  1233  000A68  0E01               	movlw	1
  1234  000A6A  D001               	goto	u39_26
  1235  000A6C                     u39_20:
  1236  000A6C  0E00               	movlw	0
  1237  000A6E                     u39_26:
  1238  000A6E  0AFF               	xorlw	255
  1239  000A70  0100               	movlb	0	; () banked
  1240  000A72  6F81               	movwf	??_pisca_led_yellow& (0+255),b
  1241  000A74  4781               	rlncf	??_pisca_led_yellow& (0+255),f,b
  1242  000A76  5083               	movf	3971,w,c	;volatile
  1243  000A78  1981               	xorwf	??_pisca_led_yellow& (0+255),w,b
  1244  000A7A  0BFD               	andlw	-3
  1245  000A7C  1981               	xorwf	??_pisca_led_yellow& (0+255),w,b
  1246  000A7E  6E83               	movwf	3971,c	;volatile
  1247  000A80  F000               	nop		;# 
  1248  000A82  F000               	nop		;# 
  1249  000A84  F000               	nop		;# 
  1250  000A86  D7EE               	goto	l45
  1251  000A88                     __end_of_pisca_led_yellow:
  1252                           	opt stack 0
  1253                           prodh	equ	0xFF4
  1254                           prodl	equ	0xFF3
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           indf2	equ	0xFDF
  1262                           postinc2	equ	0xFDE
  1263                           postdec2	equ	0xFDD
  1264                           fsr2h	equ	0xFDA
  1265                           fsr2l	equ	0xFD9
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _pisca_led_green *****************
  1269 ;; Defined at:
  1270 ;;		line 35 in file "tasks.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  2   12[None  ] PTR void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1284 ;;      Params:         0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0
  1286 ;;      Temps:          0       1       0       0       0       0       0
  1287 ;;      Totals:         0       1       0       0       0       0       0
  1288 ;;Total ram usage:        1 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    4
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text9
  1299  000A36                     __ptext9:
  1300                           	opt stack 0
  1301  000A36                     _pisca_led_green:
  1302                           	opt stack 24
  1303                           
  1304                           ;tasks.c: 37: TRISDbits.RD2 = 0;
  1305                           
  1306                           ;incstack = 0
  1307  000A36  9495               	bcf	3989,2,c	;volatile
  1308                           
  1309                           ;tasks.c: 38: PORTDbits.RD2 = 0;
  1310  000A38  9483               	bcf	3971,2,c	;volatile
  1311  000A3A                     
  1312                           ;tasks.c: 41: {
  1313                           ;tasks.c: 42: PORTDbits.RD2 = ~LATDbits.LD2;
  1314  000A3A  A48C               	btfss	3980,2,c	;volatile
  1315  000A3C  D002               	goto	u40_20
  1316  000A3E  0E01               	movlw	1
  1317  000A40  D001               	goto	u40_26
  1318  000A42                     u40_20:
  1319  000A42  0E00               	movlw	0
  1320  000A44                     u40_26:
  1321  000A44  0AFF               	xorlw	255
  1322  000A46  0100               	movlb	0	; () banked
  1323  000A48  6F82               	movwf	??_pisca_led_green& (0+255),b
  1324  000A4A  4782               	rlncf	??_pisca_led_green& (0+255),f,b
  1325  000A4C  4782               	rlncf	??_pisca_led_green& (0+255),f,b
  1326  000A4E  5083               	movf	3971,w,c	;volatile
  1327  000A50  1982               	xorwf	??_pisca_led_green& (0+255),w,b
  1328  000A52  0BFB               	andlw	-5
  1329  000A54  1982               	xorwf	??_pisca_led_green& (0+255),w,b
  1330  000A56  6E83               	movwf	3971,c	;volatile
  1331  000A58  F000               	nop		;# 
  1332  000A5A  F000               	nop		;# 
  1333  000A5C  F000               	nop		;# 
  1334  000A5E  D7ED               	goto	l51
  1335  000A60                     __end_of_pisca_led_green:
  1336                           	opt stack 0
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           intcon	equ	0xFF2
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           postdec1	equ	0xFE5
  1343                           fsr1h	equ	0xFE2
  1344                           fsr1l	equ	0xFE1
  1345                           indf2	equ	0xFDF
  1346                           postinc2	equ	0xFDE
  1347                           postdec2	equ	0xFDD
  1348                           fsr2h	equ	0xFDA
  1349                           fsr2l	equ	0xFD9
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function _nojoTaskIdle *****************
  1353 ;; Defined at:
  1354 ;;		line 63 in file "kernel.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  2   56[None  ] PTR void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1368 ;;      Params:         0       0       0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    4
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_nojoStart
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text10
  1383  000B10                     __ptext10:
  1384                           	opt stack 0
  1385  000B10                     _nojoTaskIdle:
  1386                           	opt stack 24
  1387                           
  1388                           ;kernel.c: 64: __nop();
  1389                           
  1390                           ;incstack = 0
  1391  000B10  F000               	nop	
  1392                           
  1393                           ;kernel.c: 65: __nop();
  1394  000B12  F000               	nop	
  1395                           
  1396                           ;kernel.c: 66: __nop();
  1397  000B14  F000               	nop	
  1398                           
  1399                           ;kernel.c: 68: return (0);
  1400  000B16  0E00               	movlw	0
  1401  000B18  6E01               	movwf	?_nojoTaskIdle,c
  1402  000B1A  0E00               	movlw	0
  1403  000B1C  6E02               	movwf	?_nojoTaskIdle+1,c
  1404  000B1E  0012               	return	
  1405  000B20                     __end_of_nojoTaskIdle:
  1406                           	opt stack 0
  1407                           prodh	equ	0xFF4
  1408                           prodl	equ	0xFF3
  1409                           intcon	equ	0xFF2
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1h	equ	0xFE2
  1414                           fsr1l	equ	0xFE1
  1415                           indf2	equ	0xFDF
  1416                           postinc2	equ	0xFDE
  1417                           postdec2	equ	0xFDD
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _timer_ISR *****************
  1423 ;; Defined at:
  1424 ;;		line 33 in file "timer.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         0       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0
  1440 ;;      Temps:         18       0       0       0       0       0       0
  1441 ;;      Totals:        18       0       0       0       0       0       0
  1442 ;;Total ram usage:       18 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    3
  1445 ;; This function calls:
  1446 ;;		_nojoDispatcher
  1447 ;;		_resetTimer
  1448 ;; This function is called by:
  1449 ;;		Interrupt level 2
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	intcode
  1454  000008                     __pintcode:
  1455                           	opt stack 0
  1456  000008                     _timer_ISR:
  1457                           	opt stack 24
  1458                           
  1459                           ;incstack = 0
  1460  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1461  00000A  EDF7  F003         	call	int_func,f	;refresh shadow registers
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           postdec1	equ	0xFE5
  1468                           fsr1h	equ	0xFE2
  1469                           fsr1l	equ	0xFE1
  1470                           indf2	equ	0xFDF
  1471                           postinc2	equ	0xFDE
  1472                           postdec2	equ	0xFDD
  1473                           fsr2h	equ	0xFDA
  1474                           fsr2l	equ	0xFD9
  1475                           status	equ	0xFD8
  1476                           
  1477                           	psect	intcode_body
  1478  0007EE                     __pintcode_body:
  1479                           	opt stack 24
  1480  0007EE                     int_func:
  1481                           	opt stack 24
  1482  0007EE  0006               	pop		; remove dummy address from shadow register refresh
  1483  0007F0  CFFA F027          	movff	pclath,??_timer_ISR
  1484  0007F4  CFFB F028          	movff	pclatu,??_timer_ISR+1
  1485  0007F8  CFE9 F029          	movff	fsr0l,??_timer_ISR+2
  1486  0007FC  CFEA F02A          	movff	fsr0h,??_timer_ISR+3
  1487  000800  CFE1 F02B          	movff	fsr1l,??_timer_ISR+4
  1488  000804  CFE2 F02C          	movff	fsr1h,??_timer_ISR+5
  1489  000808  CFD9 F02D          	movff	fsr2l,??_timer_ISR+6
  1490  00080C  CFDA F02E          	movff	fsr2h,??_timer_ISR+7
  1491  000810  CFF3 F02F          	movff	prodl,??_timer_ISR+8
  1492  000814  CFF4 F030          	movff	prodh,??_timer_ISR+9
  1493  000818  CFF6 F031          	movff	tblptrl,??_timer_ISR+10
  1494  00081C  CFF7 F032          	movff	tblptrh,??_timer_ISR+11
  1495  000820  CFF8 F033          	movff	tblptru,??_timer_ISR+12
  1496  000824  CFF5 F034          	movff	tablat,??_timer_ISR+13
  1497  000828  C058  F035         	movff	btemp,??_timer_ISR+14
  1498  00082C  C059  F036         	movff	btemp+1,??_timer_ISR+15
  1499  000830  C05A  F037         	movff	btemp+2,??_timer_ISR+16
  1500  000834  C05B  F038         	movff	btemp+3,??_timer_ISR+17
  1501                           
  1502                           ;timer.c: 35: if(INTCONbits.T0IE && INTCONbits.T0IF){
  1503  000838  BAF2               	btfsc	intcon,5,c	;volatile
  1504  00083A  A4F2               	btfss	intcon,2,c	;volatile
  1505  00083C  D005               	goto	i2l140
  1506                           
  1507                           ;timer.c: 36: resetTimer();
  1508  00083E  EC96  F005         	call	_resetTimer	;wreg free
  1509                           
  1510                           ;timer.c: 37: nojoDispatcher(READY);
  1511  000842  0E00               	movlw	0
  1512  000844  EC09  F000         	call	_nojoDispatcher
  1513  000848                     i2l140:
  1514  000848  C038  F05B         	movff	??_timer_ISR+17,btemp+3
  1515  00084C  C037  F05A         	movff	??_timer_ISR+16,btemp+2
  1516  000850  C036  F059         	movff	??_timer_ISR+15,btemp+1
  1517  000854  C035  F058         	movff	??_timer_ISR+14,btemp
  1518  000858  C034  FFF5         	movff	??_timer_ISR+13,tablat
  1519  00085C  C033  FFF8         	movff	??_timer_ISR+12,tblptru
  1520  000860  C032  FFF7         	movff	??_timer_ISR+11,tblptrh
  1521  000864  C031  FFF6         	movff	??_timer_ISR+10,tblptrl
  1522  000868  C030  FFF4         	movff	??_timer_ISR+9,prodh
  1523  00086C  C02F  FFF3         	movff	??_timer_ISR+8,prodl
  1524  000870  C02E  FFDA         	movff	??_timer_ISR+7,fsr2h
  1525  000874  C02D  FFD9         	movff	??_timer_ISR+6,fsr2l
  1526  000878  C02C  FFE2         	movff	??_timer_ISR+5,fsr1h
  1527  00087C  C02B  FFE1         	movff	??_timer_ISR+4,fsr1l
  1528  000880  C02A  FFEA         	movff	??_timer_ISR+3,fsr0h
  1529  000884  C029  FFE9         	movff	??_timer_ISR+2,fsr0l
  1530  000888  C028  FFFB         	movff	??_timer_ISR+1,pclatu
  1531  00088C  C027  FFFA         	movff	??_timer_ISR,pclath
  1532  000890  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1533  000892  0011               	retfie		f
  1534  000894                     __end_of_timer_ISR:
  1535                           	opt stack 0
  1536                           pclatu	equ	0xFFB
  1537                           pclath	equ	0xFFA
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           prodh	equ	0xFF4
  1543                           prodl	equ	0xFF3
  1544                           intcon	equ	0xFF2
  1545                           postinc0	equ	0xFEE
  1546                           fsr0h	equ	0xFEA
  1547                           fsr0l	equ	0xFE9
  1548                           wreg	equ	0xFE8
  1549                           postdec1	equ	0xFE5
  1550                           fsr1h	equ	0xFE2
  1551                           fsr1l	equ	0xFE1
  1552                           indf2	equ	0xFDF
  1553                           postinc2	equ	0xFDE
  1554                           postdec2	equ	0xFDD
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _resetTimer *****************
  1560 ;; Defined at:
  1561 ;;		line 25 in file "timer.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1575 ;;      Params:         0       0       0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_timer_ISR
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text12
  1589  000B2C                     __ptext12:
  1590                           	opt stack 0
  1591  000B2C                     _resetTimer:
  1592                           	opt stack 26
  1593                           
  1594                           ;timer.c: 27: INTCONbits.TMR0IF = 0;
  1595                           
  1596                           ;incstack = 0
  1597  000B2C  94F2               	bcf	intcon,2,c	;volatile
  1598                           
  1599                           ;timer.c: 28: TMR0 = 64911;
  1600  000B2E  0EFD               	movlw	253
  1601  000B30  6ED7               	movwf	4055,c	;volatile
  1602  000B32  0E8F               	movlw	143
  1603  000B34  6ED6               	movwf	4054,c	;volatile
  1604  000B36  0012               	return		;funcret
  1605  000B38                     __end_of_resetTimer:
  1606                           	opt stack 0
  1607                           pclatu	equ	0xFFB
  1608                           pclath	equ	0xFFA
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           prodh	equ	0xFF4
  1614                           prodl	equ	0xFF3
  1615                           intcon	equ	0xFF2
  1616                           postinc0	equ	0xFEE
  1617                           fsr0h	equ	0xFEA
  1618                           fsr0l	equ	0xFE9
  1619                           wreg	equ	0xFE8
  1620                           postdec1	equ	0xFE5
  1621                           fsr1h	equ	0xFE2
  1622                           fsr1l	equ	0xFE1
  1623                           indf2	equ	0xFDF
  1624                           postinc2	equ	0xFDE
  1625                           postdec2	equ	0xFDD
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _nojoDispatcher *****************
  1631 ;; Defined at:
  1632 ;;		line 38 in file "kernel.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  state           1    wreg     enum E3215
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  state           1   33[COMRAM] enum E3215
  1637 ;;  task_pos        4   34[COMRAM] unsigned long 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1647 ;;      Params:         0       0       0       0       0       0       0
  1648 ;;      Locals:         5       0       0       0       0       0       0
  1649 ;;      Temps:          7       0       0       0       0       0       0
  1650 ;;      Totals:        12       0       0       0       0       0       0
  1651 ;;Total ram usage:       12 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    2
  1654 ;; This function calls:
  1655 ;;		_priority_scheduler
  1656 ;;		i2___wmul
  1657 ;; This function is called by:
  1658 ;;		_timer_ISR
  1659 ;;		_nojoDelay
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text13
  1664  000012                     __ptext13:
  1665                           	opt stack 0
  1666  000012                     _nojoDispatcher:
  1667                           	opt stack 24
  1668                           
  1669                           ;incstack = 0
  1670                           ;nojoDispatcher@state stored from wreg
  1671  000012  6E22               	movwf	nojoDispatcher@state,c
  1672                           
  1673                           ;kernel.c: 40: INTCONbits.GIE = 0;
  1674  000014  9EF2               	bcf	intcon,7,c	;volatile
  1675                           
  1676                           ;kernel.c: 41: POS_READY_QUEUE task_pos;
  1677                           ;kernel.c: 44: do{ asm("MOVWF _tWORK"); asm("MOVFF BSR, _tBSR"); asm("MOVFF STATUS, _tST
      +                          ATUS"); F_APTOS.FILA_APTOS[F_APTOS.task_running].task_CTX.ctx_WORK = tWORK; F_APTOS.FILA
      +                          _APTOS[F_APTOS.task_running].task_CTX.ctx_BSR = tBSR; F_APTOS.FILA_APTOS[F_APTOS.task_ru
      +                          n
  1678  000016  6F3B               	movwf	_tWORK,b	;# 
  1679  000018  CFE0 F03A          	movff	bsr,_tBSR	;# 
  1680  00001C  CFD8 F039          	movff	status,_tSTATUS	;# 
  1681  000020  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1682  000024  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1683  000028  0E00               	movlw	0
  1684  00002A  6E04               	movwf	i2___wmul@multiplicand+1,c
  1685  00002C  0E70               	movlw	112
  1686  00002E  6E03               	movwf	i2___wmul@multiplicand,c
  1687  000030  EC6A  F005         	call	i2___wmul	;wreg free
  1688  000034  0E0B               	movlw	11
  1689  000036  2601               	addwf	?i2___wmul,f,c
  1690  000038  0E00               	movlw	0
  1691  00003A  2202               	addwfc	?i2___wmul+1,f,c
  1692  00003C  0E83               	movlw	low _F_APTOS
  1693  00003E  2401               	addwf	?i2___wmul,w,c
  1694  000040  6ED9               	movwf	fsr2l,c
  1695  000042  0E00               	movlw	high _F_APTOS
  1696  000044  2002               	addwfc	?i2___wmul+1,w,c
  1697  000046  6EDA               	movwf	fsr2h,c
  1698  000048  C03B  FFDF         	movff	_tWORK,indf2
  1699  00004C  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1700  000050  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1701  000054  0E00               	movlw	0
  1702  000056  6E04               	movwf	i2___wmul@multiplicand+1,c
  1703  000058  0E70               	movlw	112
  1704  00005A  6E03               	movwf	i2___wmul@multiplicand,c
  1705  00005C  EC6A  F005         	call	i2___wmul	;wreg free
  1706  000060  0E0C               	movlw	12
  1707  000062  2601               	addwf	?i2___wmul,f,c
  1708  000064  0E00               	movlw	0
  1709  000066  2202               	addwfc	?i2___wmul+1,f,c
  1710  000068  0E83               	movlw	low _F_APTOS
  1711  00006A  2401               	addwf	?i2___wmul,w,c
  1712  00006C  6ED9               	movwf	fsr2l,c
  1713  00006E  0E00               	movlw	high _F_APTOS
  1714  000070  2002               	addwfc	?i2___wmul+1,w,c
  1715  000072  6EDA               	movwf	fsr2h,c
  1716  000074  C03A  FFDF         	movff	_tBSR,indf2
  1717  000078  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1718  00007C  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1719  000080  0E00               	movlw	0
  1720  000082  6E04               	movwf	i2___wmul@multiplicand+1,c
  1721  000084  0E70               	movlw	112
  1722  000086  6E03               	movwf	i2___wmul@multiplicand,c
  1723  000088  EC6A  F005         	call	i2___wmul	;wreg free
  1724  00008C  0E0D               	movlw	13
  1725  00008E  2601               	addwf	?i2___wmul,f,c
  1726  000090  0E00               	movlw	0
  1727  000092  2202               	addwfc	?i2___wmul+1,f,c
  1728  000094  0E83               	movlw	low _F_APTOS
  1729  000096  2401               	addwf	?i2___wmul,w,c
  1730  000098  6ED9               	movwf	fsr2l,c
  1731  00009A  0E00               	movlw	high _F_APTOS
  1732  00009C  2002               	addwfc	?i2___wmul+1,w,c
  1733  00009E  6EDA               	movwf	fsr2h,c
  1734  0000A0  C039  FFDF         	movff	_tSTATUS,indf2
  1735  0000A4  D0D2               	goto	i2l94
  1736  0000A6  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1737  0000AA  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1738  0000AE  0E00               	movlw	0
  1739  0000B0  6E04               	movwf	i2___wmul@multiplicand+1,c
  1740  0000B2  0E70               	movlw	112
  1741  0000B4  6E03               	movwf	i2___wmul@multiplicand,c
  1742  0000B6  EC6A  F005         	call	i2___wmul	;wreg free
  1743  0000BA  0E12               	movlw	18
  1744  0000BC  2601               	addwf	?i2___wmul,f,c
  1745  0000BE  0E00               	movlw	0
  1746  0000C0  2202               	addwfc	?i2___wmul+1,f,c
  1747  0000C2  0E83               	movlw	low _F_APTOS
  1748  0000C4  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  1749  0000C6  0E00               	movlw	high _F_APTOS
  1750  0000C8  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  1751  0000CA  5001               	movf	?i2___wmul,w,c
  1752  0000CC  261B               	addwf	??_nojoDispatcher,f,c
  1753  0000CE  5002               	movf	?i2___wmul+1,w,c
  1754  0000D0  221C               	addwfc	??_nojoDispatcher+1,f,c
  1755  0000D2  EE22  F047         	lfsr	2,_F_APTOS+452
  1756  0000D6  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  1757  0000DA  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  1758  0000DE  0E70               	movlw	112
  1759  0000E0  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  1760  0000E2  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  1761  0000E6  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  1762  0000EA  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  1763  0000EC  50F3               	movf	prodl,w,c
  1764  0000EE  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  1765  0000F0  0E6F               	movlw	111
  1766  0000F2  261F               	addwf	??_nojoDispatcher+4,f,c
  1767  0000F4  0E00               	movlw	0
  1768  0000F6  2220               	addwfc	??_nojoDispatcher+5,f,c
  1769  0000F8  0E83               	movlw	low _F_APTOS
  1770  0000FA  241F               	addwf	??_nojoDispatcher+4,w,c
  1771  0000FC  6ED9               	movwf	fsr2l,c
  1772  0000FE  0E00               	movlw	high _F_APTOS
  1773  000100  2020               	addwfc	??_nojoDispatcher+5,w,c
  1774  000102  6EDA               	movwf	fsr2h,c
  1775  000104  50DF               	movf	indf2,w,c
  1776  000106  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  1777  000108  5021               	movf	??_nojoDispatcher+6,w,c
  1778  00010A  0D03               	mullw	3
  1779  00010C  50F3               	movf	prodl,w,c
  1780  00010E  261B               	addwf	??_nojoDispatcher,f,c
  1781  000110  50F4               	movf	prodh,w,c
  1782  000112  221C               	addwfc	??_nojoDispatcher+1,f,c
  1783  000114  0E02               	movlw	2
  1784  000116  241B               	addwf	??_nojoDispatcher,w,c
  1785  000118  6ED9               	movwf	fsr2l,c
  1786  00011A  0E00               	movlw	0
  1787  00011C  201C               	addwfc	??_nojoDispatcher+1,w,c
  1788  00011E  6EDA               	movwf	fsr2h,c
  1789  000120  50DF               	movf	223,w,c
  1790  000122  18FF               	xorwf	tosu,w,c	;volatile
  1791  000124  0BE0               	andlw	-32
  1792  000126  18FF               	xorwf	tosu,w,c	;volatile
  1793  000128  6EDF               	movwf	223,c
  1794  00012A  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1795  00012E  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1796  000132  0E00               	movlw	0
  1797  000134  6E04               	movwf	i2___wmul@multiplicand+1,c
  1798  000136  0E70               	movlw	112
  1799  000138  6E03               	movwf	i2___wmul@multiplicand,c
  1800  00013A  EC6A  F005         	call	i2___wmul	;wreg free
  1801  00013E  0E12               	movlw	18
  1802  000140  2601               	addwf	?i2___wmul,f,c
  1803  000142  0E00               	movlw	0
  1804  000144  2202               	addwfc	?i2___wmul+1,f,c
  1805  000146  0E83               	movlw	low _F_APTOS
  1806  000148  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  1807  00014A  0E00               	movlw	high _F_APTOS
  1808  00014C  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  1809  00014E  5001               	movf	?i2___wmul,w,c
  1810  000150  261B               	addwf	??_nojoDispatcher,f,c
  1811  000152  5002               	movf	?i2___wmul+1,w,c
  1812  000154  221C               	addwfc	??_nojoDispatcher+1,f,c
  1813  000156  EE22  F047         	lfsr	2,_F_APTOS+452
  1814  00015A  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  1815  00015E  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  1816  000162  0E70               	movlw	112
  1817  000164  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  1818  000166  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  1819  00016A  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  1820  00016E  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  1821  000170  50F3               	movf	prodl,w,c
  1822  000172  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  1823  000174  0E6F               	movlw	111
  1824  000176  261F               	addwf	??_nojoDispatcher+4,f,c
  1825  000178  0E00               	movlw	0
  1826  00017A  2220               	addwfc	??_nojoDispatcher+5,f,c
  1827  00017C  0E83               	movlw	low _F_APTOS
  1828  00017E  241F               	addwf	??_nojoDispatcher+4,w,c
  1829  000180  6ED9               	movwf	fsr2l,c
  1830  000182  0E00               	movlw	high _F_APTOS
  1831  000184  2020               	addwfc	??_nojoDispatcher+5,w,c
  1832  000186  6EDA               	movwf	fsr2h,c
  1833  000188  50DF               	movf	indf2,w,c
  1834  00018A  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  1835  00018C  5021               	movf	??_nojoDispatcher+6,w,c
  1836  00018E  0D03               	mullw	3
  1837  000190  50F3               	movf	prodl,w,c
  1838  000192  241B               	addwf	??_nojoDispatcher,w,c
  1839  000194  6ED9               	movwf	fsr2l,c
  1840  000196  50F4               	movf	prodh,w,c
  1841  000198  201C               	addwfc	??_nojoDispatcher+1,w,c
  1842  00019A  6EDA               	movwf	fsr2h,c
  1843  00019C  CFFD FFDF          	movff	tosl,indf2	;volatile
  1844  0001A0  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1845  0001A4  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1846  0001A8  0E00               	movlw	0
  1847  0001AA  6E04               	movwf	i2___wmul@multiplicand+1,c
  1848  0001AC  0E70               	movlw	112
  1849  0001AE  6E03               	movwf	i2___wmul@multiplicand,c
  1850  0001B0  EC6A  F005         	call	i2___wmul	;wreg free
  1851  0001B4  0E12               	movlw	18
  1852  0001B6  2601               	addwf	?i2___wmul,f,c
  1853  0001B8  0E00               	movlw	0
  1854  0001BA  2202               	addwfc	?i2___wmul+1,f,c
  1855  0001BC  0E83               	movlw	low _F_APTOS
  1856  0001BE  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  1857  0001C0  0E00               	movlw	high _F_APTOS
  1858  0001C2  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  1859  0001C4  5001               	movf	?i2___wmul,w,c
  1860  0001C6  261B               	addwf	??_nojoDispatcher,f,c
  1861  0001C8  5002               	movf	?i2___wmul+1,w,c
  1862  0001CA  221C               	addwfc	??_nojoDispatcher+1,f,c
  1863  0001CC  EE22  F047         	lfsr	2,_F_APTOS+452
  1864  0001D0  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  1865  0001D4  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  1866  0001D8  0E70               	movlw	112
  1867  0001DA  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  1868  0001DC  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  1869  0001E0  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  1870  0001E4  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  1871  0001E6  50F3               	movf	prodl,w,c
  1872  0001E8  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  1873  0001EA  0E6F               	movlw	111
  1874  0001EC  261F               	addwf	??_nojoDispatcher+4,f,c
  1875  0001EE  0E00               	movlw	0
  1876  0001F0  2220               	addwfc	??_nojoDispatcher+5,f,c
  1877  0001F2  0E83               	movlw	low _F_APTOS
  1878  0001F4  241F               	addwf	??_nojoDispatcher+4,w,c
  1879  0001F6  6ED9               	movwf	fsr2l,c
  1880  0001F8  0E00               	movlw	high _F_APTOS
  1881  0001FA  2020               	addwfc	??_nojoDispatcher+5,w,c
  1882  0001FC  6EDA               	movwf	fsr2h,c
  1883  0001FE  50DF               	movf	indf2,w,c
  1884  000200  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  1885  000202  5021               	movf	??_nojoDispatcher+6,w,c
  1886  000204  0D03               	mullw	3
  1887  000206  50F3               	movf	prodl,w,c
  1888  000208  261B               	addwf	??_nojoDispatcher,f,c
  1889  00020A  50F4               	movf	prodh,w,c
  1890  00020C  221C               	addwfc	??_nojoDispatcher+1,f,c
  1891  00020E  0E01               	movlw	1
  1892  000210  241B               	addwf	??_nojoDispatcher,w,c
  1893  000212  6ED9               	movwf	fsr2l,c
  1894  000214  0E00               	movlw	0
  1895  000216  201C               	addwfc	??_nojoDispatcher+1,w,c
  1896  000218  6EDA               	movwf	fsr2h,c
  1897  00021A  CFFE FFDF          	movff	tosh,indf2	;volatile
  1898  00021E  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1899  000222  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1900  000226  0E00               	movlw	0
  1901  000228  6E04               	movwf	i2___wmul@multiplicand+1,c
  1902  00022A  0E70               	movlw	112
  1903  00022C  6E03               	movwf	i2___wmul@multiplicand,c
  1904  00022E  EC6A  F005         	call	i2___wmul	;wreg free
  1905  000232  0E6F               	movlw	111
  1906  000234  2601               	addwf	?i2___wmul,f,c
  1907  000236  0E00               	movlw	0
  1908  000238  2202               	addwfc	?i2___wmul+1,f,c
  1909  00023A  0E83               	movlw	low _F_APTOS
  1910  00023C  2401               	addwf	?i2___wmul,w,c
  1911  00023E  6ED9               	movwf	fsr2l,c
  1912  000240  0E00               	movlw	high _F_APTOS
  1913  000242  2002               	addwfc	?i2___wmul+1,w,c
  1914  000244  6EDA               	movwf	fsr2h,c
  1915  000246  2ADF               	incf	indf2,f,c
  1916  000248  0006               	pop		;# 
  1917  00024A                     i2l94:
  1918  00024A  50FC               	movf	stkptr,w,c	;volatile
  1919  00024C  A4D8               	btfss	status,2,c
  1920  00024E  D72B               	goto	i2l95
  1921                           
  1922                           ;kernel.c: 46: F_APTOS.FILA_APTOS[F_APTOS.task_running].task_STATE = state;
  1923  000250  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1924  000254  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1925  000258  0E00               	movlw	0
  1926  00025A  6E04               	movwf	i2___wmul@multiplicand+1,c
  1927  00025C  0E70               	movlw	112
  1928  00025E  6E03               	movwf	i2___wmul@multiplicand,c
  1929  000260  EC6A  F005         	call	i2___wmul	;wreg free
  1930  000264  0E08               	movlw	8
  1931  000266  2601               	addwf	?i2___wmul,f,c
  1932  000268  0E00               	movlw	0
  1933  00026A  2202               	addwfc	?i2___wmul+1,f,c
  1934  00026C  0E83               	movlw	low _F_APTOS
  1935  00026E  2401               	addwf	?i2___wmul,w,c
  1936  000270  6ED9               	movwf	fsr2l,c
  1937  000272  0E00               	movlw	high _F_APTOS
  1938  000274  2002               	addwfc	?i2___wmul+1,w,c
  1939  000276  6EDA               	movwf	fsr2h,c
  1940  000278  C022  FFDF         	movff	nojoDispatcher@state,indf2
  1941                           
  1942                           ;kernel.c: 52: task_pos = priority_scheduler();
  1943  00027C  EC7A  F003         	call	_priority_scheduler	;wreg free
  1944  000280  C007  F023         	movff	?_priority_scheduler,nojoDispatcher@task_pos
  1945  000284  C008  F024         	movff	?_priority_scheduler+1,nojoDispatcher@task_pos+1
  1946  000288  C009  F025         	movff	?_priority_scheduler+2,nojoDispatcher@task_pos+2
  1947  00028C  C00A  F026         	movff	?_priority_scheduler+3,nojoDispatcher@task_pos+3
  1948                           
  1949                           ;kernel.c: 56: F_APTOS.task_running = task_pos;
  1950  000290  C023  F247         	movff	nojoDispatcher@task_pos,_F_APTOS+452
  1951  000294  C024  F248         	movff	nojoDispatcher@task_pos+1,_F_APTOS+453
  1952  000298  C025  F249         	movff	nojoDispatcher@task_pos+2,_F_APTOS+454
  1953  00029C  C026  F24A         	movff	nojoDispatcher@task_pos+3,_F_APTOS+455
  1954                           
  1955                           ;kernel.c: 57: F_APTOS.FILA_APTOS[task_pos].task_STATE = RUNNING;
  1956  0002A0  C023  F001         	movff	nojoDispatcher@task_pos,i2___wmul@multiplier
  1957  0002A4  C024  F002         	movff	nojoDispatcher@task_pos+1,i2___wmul@multiplier+1
  1958  0002A8  0E00               	movlw	0
  1959  0002AA  6E04               	movwf	i2___wmul@multiplicand+1,c
  1960  0002AC  0E70               	movlw	112
  1961  0002AE  6E03               	movwf	i2___wmul@multiplicand,c
  1962  0002B0  EC6A  F005         	call	i2___wmul	;wreg free
  1963  0002B4  0E08               	movlw	8
  1964  0002B6  2601               	addwf	?i2___wmul,f,c
  1965  0002B8  0E00               	movlw	0
  1966  0002BA  2202               	addwfc	?i2___wmul+1,f,c
  1967  0002BC  0E83               	movlw	low _F_APTOS
  1968  0002BE  2401               	addwf	?i2___wmul,w,c
  1969  0002C0  6ED9               	movwf	fsr2l,c
  1970  0002C2  0E00               	movlw	high _F_APTOS
  1971  0002C4  2002               	addwfc	?i2___wmul+1,w,c
  1972  0002C6  6EDA               	movwf	fsr2h,c
  1973  0002C8  0E01               	movlw	1
  1974  0002CA  6EDF               	movwf	indf2,c
  1975                           
  1976                           ;kernel.c: 59: do{ STKPTR = 0; tWORK = F_APTOS.FILA_APTOS[F_APTOS.task_running].task_CTX
      +                          .ctx_WORK; tBSR = F_APTOS.FILA_APTOS[F_APTOS.task_running].task_CTX.ctx_BSR; tSTATUS = F
      +                          _APTOS.FILA_APTOS[F_APTOS.task_running].task_CTX.ctx_STATUS; while (F_APTOS.FILA_APTOS[F
      +                          _
  1977  0002CC  0E00               	movlw	0
  1978  0002CE  6EFC               	movwf	stkptr,c	;volatile
  1979  0002D0  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1980  0002D4  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  1981  0002D8  0E00               	movlw	0
  1982  0002DA  6E04               	movwf	i2___wmul@multiplicand+1,c
  1983  0002DC  0E70               	movlw	112
  1984  0002DE  6E03               	movwf	i2___wmul@multiplicand,c
  1985  0002E0  EC6A  F005         	call	i2___wmul	;wreg free
  1986  0002E4  0E0B               	movlw	11
  1987  0002E6  2601               	addwf	?i2___wmul,f,c
  1988  0002E8  0E00               	movlw	0
  1989  0002EA  2202               	addwfc	?i2___wmul+1,f,c
  1990  0002EC  0E83               	movlw	low _F_APTOS
  1991  0002EE  2401               	addwf	?i2___wmul,w,c
  1992  0002F0  6ED9               	movwf	fsr2l,c
  1993  0002F2  0E00               	movlw	high _F_APTOS
  1994  0002F4  2002               	addwfc	?i2___wmul+1,w,c
  1995  0002F6  6EDA               	movwf	fsr2h,c
  1996  0002F8  50DF               	movf	indf2,w,c
  1997  0002FA  6E3B               	movwf	_tWORK,c
  1998  0002FC  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  1999  000300  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2000  000304  0E00               	movlw	0
  2001  000306  6E04               	movwf	i2___wmul@multiplicand+1,c
  2002  000308  0E70               	movlw	112
  2003  00030A  6E03               	movwf	i2___wmul@multiplicand,c
  2004  00030C  EC6A  F005         	call	i2___wmul	;wreg free
  2005  000310  0E0C               	movlw	12
  2006  000312  2601               	addwf	?i2___wmul,f,c
  2007  000314  0E00               	movlw	0
  2008  000316  2202               	addwfc	?i2___wmul+1,f,c
  2009  000318  0E83               	movlw	low _F_APTOS
  2010  00031A  2401               	addwf	?i2___wmul,w,c
  2011  00031C  6ED9               	movwf	fsr2l,c
  2012  00031E  0E00               	movlw	high _F_APTOS
  2013  000320  2002               	addwfc	?i2___wmul+1,w,c
  2014  000322  6EDA               	movwf	fsr2h,c
  2015  000324  50DF               	movf	indf2,w,c
  2016  000326  6E3A               	movwf	_tBSR,c
  2017  000328  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2018  00032C  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2019  000330  0E00               	movlw	0
  2020  000332  6E04               	movwf	i2___wmul@multiplicand+1,c
  2021  000334  0E70               	movlw	112
  2022  000336  6E03               	movwf	i2___wmul@multiplicand,c
  2023  000338  EC6A  F005         	call	i2___wmul	;wreg free
  2024  00033C  0E0D               	movlw	13
  2025  00033E  2601               	addwf	?i2___wmul,f,c
  2026  000340  0E00               	movlw	0
  2027  000342  2202               	addwfc	?i2___wmul+1,f,c
  2028  000344  0E83               	movlw	low _F_APTOS
  2029  000346  2401               	addwf	?i2___wmul,w,c
  2030  000348  6ED9               	movwf	fsr2l,c
  2031  00034A  0E00               	movlw	high _F_APTOS
  2032  00034C  2002               	addwfc	?i2___wmul+1,w,c
  2033  00034E  6EDA               	movwf	fsr2h,c
  2034  000350  50DF               	movf	indf2,w,c
  2035  000352  6E39               	movwf	_tSTATUS,c
  2036  000354  D0D0               	goto	i2l99
  2037  000356                     i2l100:
  2038  000356  0005               	push		;# 
  2039  000358  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2040  00035C  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2041  000360  0E00               	movlw	0
  2042  000362  6E04               	movwf	i2___wmul@multiplicand+1,c
  2043  000364  0E70               	movlw	112
  2044  000366  6E03               	movwf	i2___wmul@multiplicand,c
  2045  000368  EC6A  F005         	call	i2___wmul	;wreg free
  2046  00036C  0E6F               	movlw	111
  2047  00036E  2601               	addwf	?i2___wmul,f,c
  2048  000370  0E00               	movlw	0
  2049  000372  2202               	addwfc	?i2___wmul+1,f,c
  2050  000374  0E83               	movlw	low _F_APTOS
  2051  000376  2401               	addwf	?i2___wmul,w,c
  2052  000378  6ED9               	movwf	fsr2l,c
  2053  00037A  0E00               	movlw	high _F_APTOS
  2054  00037C  2002               	addwfc	?i2___wmul+1,w,c
  2055  00037E  6EDA               	movwf	fsr2h,c
  2056  000380  06DF               	decf	indf2,f,c
  2057  000382  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2058  000386  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2059  00038A  0E00               	movlw	0
  2060  00038C  6E04               	movwf	i2___wmul@multiplicand+1,c
  2061  00038E  0E70               	movlw	112
  2062  000390  6E03               	movwf	i2___wmul@multiplicand,c
  2063  000392  EC6A  F005         	call	i2___wmul	;wreg free
  2064  000396  0E12               	movlw	18
  2065  000398  2601               	addwf	?i2___wmul,f,c
  2066  00039A  0E00               	movlw	0
  2067  00039C  2202               	addwfc	?i2___wmul+1,f,c
  2068  00039E  0E83               	movlw	low _F_APTOS
  2069  0003A0  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  2070  0003A2  0E00               	movlw	high _F_APTOS
  2071  0003A4  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  2072  0003A6  5001               	movf	?i2___wmul,w,c
  2073  0003A8  261B               	addwf	??_nojoDispatcher,f,c
  2074  0003AA  5002               	movf	?i2___wmul+1,w,c
  2075  0003AC  221C               	addwfc	??_nojoDispatcher+1,f,c
  2076  0003AE  EE22  F047         	lfsr	2,_F_APTOS+452
  2077  0003B2  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  2078  0003B6  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  2079  0003BA  0E70               	movlw	112
  2080  0003BC  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  2081  0003BE  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  2082  0003C2  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  2083  0003C6  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  2084  0003C8  50F3               	movf	prodl,w,c
  2085  0003CA  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  2086  0003CC  0E6F               	movlw	111
  2087  0003CE  261F               	addwf	??_nojoDispatcher+4,f,c
  2088  0003D0  0E00               	movlw	0
  2089  0003D2  2220               	addwfc	??_nojoDispatcher+5,f,c
  2090  0003D4  0E83               	movlw	low _F_APTOS
  2091  0003D6  241F               	addwf	??_nojoDispatcher+4,w,c
  2092  0003D8  6ED9               	movwf	fsr2l,c
  2093  0003DA  0E00               	movlw	high _F_APTOS
  2094  0003DC  2020               	addwfc	??_nojoDispatcher+5,w,c
  2095  0003DE  6EDA               	movwf	fsr2h,c
  2096  0003E0  50DF               	movf	indf2,w,c
  2097  0003E2  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  2098  0003E4  5021               	movf	??_nojoDispatcher+6,w,c
  2099  0003E6  0D03               	mullw	3
  2100  0003E8  50F3               	movf	prodl,w,c
  2101  0003EA  261B               	addwf	??_nojoDispatcher,f,c
  2102  0003EC  50F4               	movf	prodh,w,c
  2103  0003EE  221C               	addwfc	??_nojoDispatcher+1,f,c
  2104  0003F0  0E02               	movlw	2
  2105  0003F2  241B               	addwf	??_nojoDispatcher,w,c
  2106  0003F4  6ED9               	movwf	fsr2l,c
  2107  0003F6  0E00               	movlw	0
  2108  0003F8  201C               	addwfc	??_nojoDispatcher+1,w,c
  2109  0003FA  6EDA               	movwf	fsr2h,c
  2110  0003FC  50DF               	movf	223,w,c
  2111  0003FE  0B1F               	andlw	31
  2112  000400  6EFF               	movwf	tosu,c	;volatile
  2113  000402  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2114  000406  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2115  00040A  0E00               	movlw	0
  2116  00040C  6E04               	movwf	i2___wmul@multiplicand+1,c
  2117  00040E  0E70               	movlw	112
  2118  000410  6E03               	movwf	i2___wmul@multiplicand,c
  2119  000412  EC6A  F005         	call	i2___wmul	;wreg free
  2120  000416  0E12               	movlw	18
  2121  000418  2601               	addwf	?i2___wmul,f,c
  2122  00041A  0E00               	movlw	0
  2123  00041C  2202               	addwfc	?i2___wmul+1,f,c
  2124  00041E  0E83               	movlw	low _F_APTOS
  2125  000420  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  2126  000422  0E00               	movlw	high _F_APTOS
  2127  000424  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  2128  000426  5001               	movf	?i2___wmul,w,c
  2129  000428  261B               	addwf	??_nojoDispatcher,f,c
  2130  00042A  5002               	movf	?i2___wmul+1,w,c
  2131  00042C  221C               	addwfc	??_nojoDispatcher+1,f,c
  2132  00042E  EE22  F047         	lfsr	2,_F_APTOS+452
  2133  000432  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  2134  000436  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  2135  00043A  0E70               	movlw	112
  2136  00043C  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  2137  00043E  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  2138  000442  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  2139  000446  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  2140  000448  50F3               	movf	prodl,w,c
  2141  00044A  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  2142  00044C  0E6F               	movlw	111
  2143  00044E  261F               	addwf	??_nojoDispatcher+4,f,c
  2144  000450  0E00               	movlw	0
  2145  000452  2220               	addwfc	??_nojoDispatcher+5,f,c
  2146  000454  0E83               	movlw	low _F_APTOS
  2147  000456  241F               	addwf	??_nojoDispatcher+4,w,c
  2148  000458  6ED9               	movwf	fsr2l,c
  2149  00045A  0E00               	movlw	high _F_APTOS
  2150  00045C  2020               	addwfc	??_nojoDispatcher+5,w,c
  2151  00045E  6EDA               	movwf	fsr2h,c
  2152  000460  50DF               	movf	indf2,w,c
  2153  000462  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  2154  000464  5021               	movf	??_nojoDispatcher+6,w,c
  2155  000466  0D03               	mullw	3
  2156  000468  50F3               	movf	prodl,w,c
  2157  00046A  261B               	addwf	??_nojoDispatcher,f,c
  2158  00046C  50F4               	movf	prodh,w,c
  2159  00046E  221C               	addwfc	??_nojoDispatcher+1,f,c
  2160  000470  0E01               	movlw	1
  2161  000472  241B               	addwf	??_nojoDispatcher,w,c
  2162  000474  6ED9               	movwf	fsr2l,c
  2163  000476  0E00               	movlw	0
  2164  000478  201C               	addwfc	??_nojoDispatcher+1,w,c
  2165  00047A  6EDA               	movwf	fsr2h,c
  2166  00047C  50DF               	movf	indf2,w,c
  2167  00047E  6EFE               	movwf	tosh,c	;volatile
  2168  000480  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2169  000484  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2170  000488  0E00               	movlw	0
  2171  00048A  6E04               	movwf	i2___wmul@multiplicand+1,c
  2172  00048C  0E70               	movlw	112
  2173  00048E  6E03               	movwf	i2___wmul@multiplicand,c
  2174  000490  EC6A  F005         	call	i2___wmul	;wreg free
  2175  000494  0E12               	movlw	18
  2176  000496  2601               	addwf	?i2___wmul,f,c
  2177  000498  0E00               	movlw	0
  2178  00049A  2202               	addwfc	?i2___wmul+1,f,c
  2179  00049C  0E83               	movlw	low _F_APTOS
  2180  00049E  6E1B               	movwf	??_nojoDispatcher& (0+255),c
  2181  0004A0  0E00               	movlw	high _F_APTOS
  2182  0004A2  6E1C               	movwf	(??_nojoDispatcher+1)& (0+255),c
  2183  0004A4  5001               	movf	?i2___wmul,w,c
  2184  0004A6  261B               	addwf	??_nojoDispatcher,f,c
  2185  0004A8  5002               	movf	?i2___wmul+1,w,c
  2186  0004AA  221C               	addwfc	??_nojoDispatcher+1,f,c
  2187  0004AC  EE22  F047         	lfsr	2,_F_APTOS+452
  2188  0004B0  CFDE F01D          	movff	postinc2,??_nojoDispatcher+2
  2189  0004B4  CFDD F01E          	movff	postdec2,??_nojoDispatcher+3
  2190  0004B8  0E70               	movlw	112
  2191  0004BA  021D               	mulwf	(??_nojoDispatcher+2)& (0+255),c
  2192  0004BC  CFF3 F01F          	movff	prodl,??_nojoDispatcher+4
  2193  0004C0  CFF4 F020          	movff	prodh,??_nojoDispatcher+5
  2194  0004C4  021E               	mulwf	(??_nojoDispatcher+3)& (0+255),c
  2195  0004C6  50F3               	movf	prodl,w,c
  2196  0004C8  2620               	addwf	(??_nojoDispatcher+5)& (0+255),f,c
  2197  0004CA  0E6F               	movlw	111
  2198  0004CC  261F               	addwf	??_nojoDispatcher+4,f,c
  2199  0004CE  0E00               	movlw	0
  2200  0004D0  2220               	addwfc	??_nojoDispatcher+5,f,c
  2201  0004D2  0E83               	movlw	low _F_APTOS
  2202  0004D4  241F               	addwf	??_nojoDispatcher+4,w,c
  2203  0004D6  6ED9               	movwf	fsr2l,c
  2204  0004D8  0E00               	movlw	high _F_APTOS
  2205  0004DA  2020               	addwfc	??_nojoDispatcher+5,w,c
  2206  0004DC  6EDA               	movwf	fsr2h,c
  2207  0004DE  50DF               	movf	indf2,w,c
  2208  0004E0  6E21               	movwf	(??_nojoDispatcher+6)& (0+255),c
  2209  0004E2  5021               	movf	??_nojoDispatcher+6,w,c
  2210  0004E4  0D03               	mullw	3
  2211  0004E6  50F3               	movf	prodl,w,c
  2212  0004E8  241B               	addwf	??_nojoDispatcher,w,c
  2213  0004EA  6ED9               	movwf	fsr2l,c
  2214  0004EC  50F4               	movf	prodh,w,c
  2215  0004EE  201C               	addwfc	??_nojoDispatcher+1,w,c
  2216  0004F0  6EDA               	movwf	fsr2h,c
  2217  0004F2  50DF               	movf	indf2,w,c
  2218  0004F4  6EFD               	movwf	tosl,c	;volatile
  2219  0004F6                     i2l99:
  2220  0004F6  C247  F001         	movff	_F_APTOS+452,i2___wmul@multiplier
  2221  0004FA  C248  F002         	movff	_F_APTOS+453,i2___wmul@multiplier+1
  2222  0004FE  0E00               	movlw	0
  2223  000500  6E04               	movwf	i2___wmul@multiplicand+1,c
  2224  000502  0E70               	movlw	112
  2225  000504  6E03               	movwf	i2___wmul@multiplicand,c
  2226  000506  EC6A  F005         	call	i2___wmul	;wreg free
  2227  00050A  0E6F               	movlw	111
  2228  00050C  2601               	addwf	?i2___wmul,f,c
  2229  00050E  0E00               	movlw	0
  2230  000510  2202               	addwfc	?i2___wmul+1,f,c
  2231  000512  0E83               	movlw	low _F_APTOS
  2232  000514  2401               	addwf	?i2___wmul,w,c
  2233  000516  6ED9               	movwf	fsr2l,c
  2234  000518  0E00               	movlw	high _F_APTOS
  2235  00051A  2002               	addwfc	?i2___wmul+1,w,c
  2236  00051C  6EDA               	movwf	fsr2h,c
  2237  00051E  50DF               	movf	indf2,w,c
  2238  000520  A4D8               	btfss	status,2,c
  2239  000522  D719               	goto	i2l100
  2240  000524  C03A  FFE0         	movff	_tBSR,bsr	;# 
  2241  000528  C039  FFD8         	movff	_tSTATUS,status	;# 
  2242  00052C  533B               	movf	_tWORK,f,b	;# 
  2243                           
  2244                           ;kernel.c: 60: INTCONbits.GIE = 1;
  2245  00052E  8EF2               	bsf	intcon,7,c	;volatile
  2246  000530  0012               	return		;funcret
  2247  000532                     __end_of_nojoDispatcher:
  2248                           	opt stack 0
  2249                           tosu	equ	0xFFF
  2250                           tosh	equ	0xFFE
  2251                           tosl	equ	0xFFD
  2252                           stkptr	equ	0xFFC
  2253                           pclatu	equ	0xFFB
  2254                           pclath	equ	0xFFA
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           prodh	equ	0xFF4
  2260                           prodl	equ	0xFF3
  2261                           intcon	equ	0xFF2
  2262                           postinc0	equ	0xFEE
  2263                           fsr0h	equ	0xFEA
  2264                           fsr0l	equ	0xFE9
  2265                           wreg	equ	0xFE8
  2266                           postdec1	equ	0xFE5
  2267                           fsr1h	equ	0xFE2
  2268                           fsr1l	equ	0xFE1
  2269                           bsr	equ	0xFE0
  2270                           indf2	equ	0xFDF
  2271                           postinc2	equ	0xFDE
  2272                           postdec2	equ	0xFDD
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _priority_scheduler *****************
  2278 ;; Defined at:
  2279 ;;		line 5 in file "scheduler.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  i               4   22[COMRAM] unsigned long 
  2284 ;;  pos_next_tas    4   18[COMRAM] unsigned long 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  4    6[COMRAM] unsigned long 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2294 ;;      Params:         4       0       0       0       0       0       0
  2295 ;;      Locals:         8       0       0       0       0       0       0
  2296 ;;      Temps:          8       0       0       0       0       0       0
  2297 ;;      Totals:        20       0       0       0       0       0       0
  2298 ;;Total ram usage:       20 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    1
  2301 ;; This function calls:
  2302 ;;		i2___wmul
  2303 ;; This function is called by:
  2304 ;;		_nojoDispatcher
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text14
  2309  0006F4                     __ptext14:
  2310                           	opt stack 0
  2311  0006F4                     _priority_scheduler:
  2312                           	opt stack 24
  2313                           
  2314                           ;scheduler.c: 7: u_int i, pos_next_task = 0;
  2315                           
  2316                           ;incstack = 0
  2317  0006F4  0E00               	movlw	0
  2318  0006F6  6E13               	movwf	priority_scheduler@pos_next_task,c
  2319  0006F8  0E00               	movlw	0
  2320  0006FA  6E14               	movwf	priority_scheduler@pos_next_task+1,c
  2321  0006FC  0E00               	movlw	0
  2322  0006FE  6E15               	movwf	priority_scheduler@pos_next_task+2,c
  2323  000700  0E00               	movlw	0
  2324  000702  6E16               	movwf	priority_scheduler@pos_next_task+3,c
  2325                           
  2326                           ;scheduler.c: 8: for(i = 1; i <= F_APTOS.tasks_installed; i++) {
  2327  000704  0E01               	movlw	1
  2328  000706  6E17               	movwf	priority_scheduler@i,c
  2329  000708  0E00               	movlw	0
  2330  00070A  6E18               	movwf	priority_scheduler@i+1,c
  2331  00070C  0E00               	movlw	0
  2332  00070E  6E19               	movwf	priority_scheduler@i+2,c
  2333  000710  0E00               	movlw	0
  2334  000712  6E1A               	movwf	priority_scheduler@i+3,c
  2335  000714  D057               	goto	i2l146
  2336  000716                     
  2337                           ;scheduler.c: 9: if(F_APTOS.FILA_APTOS[pos_next_task].task_PRIOR < F_APTOS.FILA_APTOS[i]
      +                          .task_PRIOR) {
  2338  000716  C017  F001         	movff	priority_scheduler@i,i2___wmul@multiplier
  2339  00071A  C018  F002         	movff	priority_scheduler@i+1,i2___wmul@multiplier+1
  2340  00071E  0E00               	movlw	0
  2341  000720  6E04               	movwf	i2___wmul@multiplicand+1,c
  2342  000722  0E70               	movlw	112
  2343  000724  6E03               	movwf	i2___wmul@multiplicand,c
  2344  000726  EC6A  F005         	call	i2___wmul	;wreg free
  2345  00072A  0E04               	movlw	4
  2346  00072C  2601               	addwf	?i2___wmul,f,c
  2347  00072E  0E00               	movlw	0
  2348  000730  2202               	addwfc	?i2___wmul+1,f,c
  2349  000732  0E83               	movlw	low _F_APTOS
  2350  000734  2401               	addwf	?i2___wmul,w,c
  2351  000736  6ED9               	movwf	fsr2l,c
  2352  000738  0E00               	movlw	high _F_APTOS
  2353  00073A  2002               	addwfc	?i2___wmul+1,w,c
  2354  00073C  6EDA               	movwf	fsr2h,c
  2355  00073E  C013  F001         	movff	priority_scheduler@pos_next_task,i2___wmul@multiplier
  2356  000742  C014  F002         	movff	priority_scheduler@pos_next_task+1,i2___wmul@multiplier+1
  2357  000746  0E00               	movlw	0
  2358  000748  6E04               	movwf	i2___wmul@multiplicand+1,c
  2359  00074A  0E70               	movlw	112
  2360  00074C  6E03               	movwf	i2___wmul@multiplicand,c
  2361  00074E  EC6A  F005         	call	i2___wmul	;wreg free
  2362  000752  0E04               	movlw	4
  2363  000754  2601               	addwf	?i2___wmul,f,c
  2364  000756  0E00               	movlw	0
  2365  000758  2202               	addwfc	?i2___wmul+1,f,c
  2366  00075A  0E83               	movlw	low _F_APTOS
  2367  00075C  2401               	addwf	?i2___wmul,w,c
  2368  00075E  6EE1               	movwf	fsr1l,c
  2369  000760  0E00               	movlw	high _F_APTOS
  2370  000762  2002               	addwfc	?i2___wmul+1,w,c
  2371  000764  6EE2               	movwf	fsr1h,c
  2372  000766  50DE               	movf	postinc2,w,c
  2373  000768  5CE6               	subwf	postinc1,w,c
  2374  00076A  50DE               	movf	postinc2,w,c
  2375  00076C  58E6               	subwfb	postinc1,w,c
  2376  00076E  50DE               	movf	postinc2,w,c
  2377  000770  58E6               	subwfb	postinc1,w,c
  2378  000772  50DE               	movf	postinc2,w,c
  2379  000774  58E6               	subwfb	postinc1,w,c
  2380  000776  B0D8               	btfsc	status,0,c
  2381  000778  D01F               	goto	i2l149
  2382                           
  2383                           ;scheduler.c: 10: if(F_APTOS.FILA_APTOS[i].task_STATE == READY){
  2384  00077A  C017  F001         	movff	priority_scheduler@i,i2___wmul@multiplier
  2385  00077E  C018  F002         	movff	priority_scheduler@i+1,i2___wmul@multiplier+1
  2386  000782  0E00               	movlw	0
  2387  000784  6E04               	movwf	i2___wmul@multiplicand+1,c
  2388  000786  0E70               	movlw	112
  2389  000788  6E03               	movwf	i2___wmul@multiplicand,c
  2390  00078A  EC6A  F005         	call	i2___wmul	;wreg free
  2391  00078E  0E08               	movlw	8
  2392  000790  2601               	addwf	?i2___wmul,f,c
  2393  000792  0E00               	movlw	0
  2394  000794  2202               	addwfc	?i2___wmul+1,f,c
  2395  000796  0E83               	movlw	low _F_APTOS
  2396  000798  2401               	addwf	?i2___wmul,w,c
  2397  00079A  6ED9               	movwf	fsr2l,c
  2398  00079C  0E00               	movlw	high _F_APTOS
  2399  00079E  2002               	addwfc	?i2___wmul+1,w,c
  2400  0007A0  6EDA               	movwf	fsr2h,c
  2401  0007A2  50DF               	movf	indf2,w,c
  2402  0007A4  A4D8               	btfss	status,2,c
  2403  0007A6  D008               	goto	i2l149
  2404                           
  2405                           ;scheduler.c: 11: pos_next_task = i;
  2406  0007A8  C017  F013         	movff	priority_scheduler@i,priority_scheduler@pos_next_task
  2407  0007AC  C018  F014         	movff	priority_scheduler@i+1,priority_scheduler@pos_next_task+1
  2408  0007B0  C019  F015         	movff	priority_scheduler@i+2,priority_scheduler@pos_next_task+2
  2409  0007B4  C01A  F016         	movff	priority_scheduler@i+3,priority_scheduler@pos_next_task+3
  2410  0007B8                     i2l149:
  2411  0007B8  0E01               	movlw	1
  2412  0007BA  2617               	addwf	priority_scheduler@i,f,c
  2413  0007BC  0E00               	movlw	0
  2414  0007BE  2218               	addwfc	priority_scheduler@i+1,f,c
  2415  0007C0  2219               	addwfc	priority_scheduler@i+2,f,c
  2416  0007C2  221A               	addwfc	priority_scheduler@i+3,f,c
  2417  0007C4                     i2l146:
  2418  0007C4  EE22  F043         	lfsr	2,_F_APTOS+448
  2419  0007C8  5017               	movf	priority_scheduler@i,w,c
  2420  0007CA  5CDE               	subwf	postinc2,w,c
  2421  0007CC  5018               	movf	priority_scheduler@i+1,w,c
  2422  0007CE  58DE               	subwfb	postinc2,w,c
  2423  0007D0  5019               	movf	priority_scheduler@i+2,w,c
  2424  0007D2  58DE               	subwfb	postinc2,w,c
  2425  0007D4  501A               	movf	priority_scheduler@i+3,w,c
  2426  0007D6  58DE               	subwfb	postinc2,w,c
  2427  0007D8  B0D8               	btfsc	status,0,c
  2428  0007DA  D79D               	goto	i2l147
  2429                           
  2430                           ;scheduler.c: 12: }
  2431                           ;scheduler.c: 13: }
  2432                           ;scheduler.c: 14: }
  2433                           ;scheduler.c: 15: return pos_next_task;
  2434  0007DC  C013  F007         	movff	priority_scheduler@pos_next_task,?_priority_scheduler
  2435  0007E0  C014  F008         	movff	priority_scheduler@pos_next_task+1,?_priority_scheduler+1
  2436  0007E4  C015  F009         	movff	priority_scheduler@pos_next_task+2,?_priority_scheduler+2
  2437  0007E8  C016  F00A         	movff	priority_scheduler@pos_next_task+3,?_priority_scheduler+3
  2438  0007EC  0012               	return		;funcret
  2439  0007EE                     __end_of_priority_scheduler:
  2440                           	opt stack 0
  2441                           tosu	equ	0xFFF
  2442                           tosh	equ	0xFFE
  2443                           tosl	equ	0xFFD
  2444                           stkptr	equ	0xFFC
  2445                           pclatu	equ	0xFFB
  2446                           pclath	equ	0xFFA
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           fsr0h	equ	0xFEA
  2456                           fsr0l	equ	0xFE9
  2457                           wreg	equ	0xFE8
  2458                           postinc1	equ	0xFE6
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           bsr	equ	0xFE0
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function i2___wmul *****************
  2471 ;; Defined at:
  2472 ;;		line 15 in file "/Applications/microchip/xc8/v1.44/sources/common/Umul16.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  multiplier      2    0[COMRAM] unsigned int 
  2475 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  __wmul          2    4[COMRAM] unsigned int 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2    0[COMRAM] unsigned int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, prodl, prodh
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2487 ;;      Params:         4       0       0       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0
  2490 ;;      Totals:         6       0       0       0       0       0       0
  2491 ;;Total ram usage:        6 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_nojoDispatcher
  2497 ;;		_priority_scheduler
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text15
  2502  000AD4                     __ptext15:
  2503                           	opt stack 0
  2504  000AD4                     i2___wmul:
  2505                           	opt stack 25
  2506                           
  2507                           ;incstack = 0
  2508  000AD4  5001               	movf	i2___wmul@multiplier,w,c
  2509  000AD6  0203               	mulwf	i2___wmul@multiplicand,c
  2510  000AD8  CFF3 F005          	movff	prodl,i2___wmul@product
  2511  000ADC  CFF4 F006          	movff	prodh,i2___wmul@product+1
  2512  000AE0  5001               	movf	i2___wmul@multiplier,w,c
  2513  000AE2  0204               	mulwf	i2___wmul@multiplicand+1,c
  2514  000AE4  50F3               	movf	prodl,w,c
  2515  000AE6  2606               	addwf	i2___wmul@product+1,f,c
  2516  000AE8  5002               	movf	i2___wmul@multiplier+1,w,c
  2517  000AEA  0203               	mulwf	i2___wmul@multiplicand,c
  2518  000AEC  50F3               	movf	prodl,w,c
  2519  000AEE  2606               	addwf	i2___wmul@product+1,f,c
  2520  000AF0  C005  F001         	movff	i2___wmul@product,?i2___wmul
  2521  000AF4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  2522  000AF8  0012               	return	
  2523  000AFA                     __end_ofi2___wmul:
  2524                           	opt stack 0
  2525  0000                     tosu	equ	0xFFF
  2526                           tosh	equ	0xFFE
  2527                           tosl	equ	0xFFD
  2528                           stkptr	equ	0xFFC
  2529                           pclatu	equ	0xFFB
  2530                           pclath	equ	0xFFA
  2531                           tblptru	equ	0xFF8
  2532                           tblptrh	equ	0xFF7
  2533                           tblptrl	equ	0xFF6
  2534                           tablat	equ	0xFF5
  2535                           prodh	equ	0xFF4
  2536                           prodl	equ	0xFF3
  2537                           intcon	equ	0xFF2
  2538                           postinc0	equ	0xFEE
  2539                           fsr0h	equ	0xFEA
  2540                           fsr0l	equ	0xFE9
  2541                           wreg	equ	0xFE8
  2542                           postinc1	equ	0xFE6
  2543                           postdec1	equ	0xFE5
  2544                           fsr1h	equ	0xFE2
  2545                           fsr1l	equ	0xFE1
  2546                           bsr	equ	0xFE0
  2547                           indf2	equ	0xFDF
  2548                           postinc2	equ	0xFDE
  2549                           postdec2	equ	0xFDD
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           tosu	equ	0xFFF
  2554                           tosh	equ	0xFFE
  2555                           tosl	equ	0xFFD
  2556                           stkptr	equ	0xFFC
  2557                           pclatu	equ	0xFFB
  2558                           pclath	equ	0xFFA
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           fsr0h	equ	0xFEA
  2568                           fsr0l	equ	0xFE9
  2569                           wreg	equ	0xFE8
  2570                           postinc1	equ	0xFE6
  2571                           postdec1	equ	0xFE5
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           bsr	equ	0xFE0
  2575                           indf2	equ	0xFDF
  2576                           postinc2	equ	0xFDE
  2577                           postdec2	equ	0xFDD
  2578                           fsr2h	equ	0xFDA
  2579                           fsr2l	equ	0xFD9
  2580                           status	equ	0xFD8
  2581                           
  2582                           	psect	text16
  2583  000000                     __ptext16:
  2584                           	opt stack 0
  2585                           tosu	equ	0xFFF
  2586                           tosh	equ	0xFFE
  2587                           tosl	equ	0xFFD
  2588                           stkptr	equ	0xFFC
  2589                           pclatu	equ	0xFFB
  2590                           pclath	equ	0xFFA
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           fsr0h	equ	0xFEA
  2600                           fsr0l	equ	0xFE9
  2601                           wreg	equ	0xFE8
  2602                           postinc1	equ	0xFE6
  2603                           postdec1	equ	0xFE5
  2604                           fsr1h	equ	0xFE2
  2605                           fsr1l	equ	0xFE1
  2606                           bsr	equ	0xFE0
  2607                           indf2	equ	0xFDF
  2608                           postinc2	equ	0xFDE
  2609                           postdec2	equ	0xFDD
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614                           	psect	rparam
  2615  0000                     tosu	equ	0xFFF
  2616                           tosh	equ	0xFFE
  2617                           tosl	equ	0xFFD
  2618                           stkptr	equ	0xFFC
  2619                           pclatu	equ	0xFFB
  2620                           pclath	equ	0xFFA
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           fsr0h	equ	0xFEA
  2630                           fsr0l	equ	0xFE9
  2631                           wreg	equ	0xFE8
  2632                           postinc1	equ	0xFE6
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           bsr	equ	0xFE0
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644                           	psect	temp
  2645  000058                     btemp:
  2646                           	opt stack 0
  2647  000058                     	ds	1
  2648  0000                     int$flags	set	btemp
  2649  0000                     wtemp6	set	btemp+1
  2650                           tosu	equ	0xFFF
  2651                           tosh	equ	0xFFE
  2652                           tosl	equ	0xFFD
  2653                           stkptr	equ	0xFFC
  2654                           pclatu	equ	0xFFB
  2655                           pclath	equ	0xFFA
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           intcon	equ	0xFF2
  2663                           postinc0	equ	0xFEE
  2664                           fsr0h	equ	0xFEA
  2665                           fsr0l	equ	0xFE9
  2666                           wreg	equ	0xFE8
  2667                           postinc1	equ	0xFE6
  2668                           postdec1	equ	0xFE5
  2669                           fsr1h	equ	0xFE2
  2670                           fsr1l	equ	0xFE1
  2671                           bsr	equ	0xFE0
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           postdec2	equ	0xFDD
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         487
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56      87
    BANK0           128      3       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp_S253tcb$task_PTR	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__F_APTOS.FILA_APTOS.task_PTR	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp_nojoTaskCreate@task_PTR	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    delay_queue_create@delay_queue_handler	PTR struct queue_delay size(2) Largest target is 28
		 -> Q_DELAY(COMRAM[28]), 

    sp__nojoTaskIdle	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    nojoTaskCreate@task_PTR	PTR FTN()PTR void  size(2) Largest target is 3
		 -> pisca_led_green(), pisca_led_yellow(), pisca_led_red(), 

    S253tcb$task_PTR	PTR FTN()PTR void  size(2) Largest target is 3
		 -> nojoTaskIdle(), pisca_led_green(), pisca_led_yellow(), pisca_led_red(), 

    F_APTOS.FILA_APTOS.task_PTR	PTR FTN()PTR void  size(2) Largest target is 3
		 -> nojoTaskIdle(), pisca_led_green(), pisca_led_yellow(), pisca_led_red(), 

    sp__pisca_led_green	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__pisca_led_yellow	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__pisca_led_red	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_nojoTaskCreate
    _nojoTaskCreate->___wmul
    _nojoStart->_delay_queue_create

Critical Paths under _pisca_led_red in COMRAM

    None.

Critical Paths under _pisca_led_yellow in COMRAM

    None.

Critical Paths under _pisca_led_green in COMRAM

    None.

Critical Paths under _nojoTaskIdle in COMRAM

    None.

Critical Paths under _nojoTaskIdle in COMRAM

    None.

Critical Paths under _timer_ISR in COMRAM

    _timer_ISR->_nojoDispatcher
    _nojoDispatcher->_priority_scheduler
    _priority_scheduler->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _pisca_led_red in BANK0

    None.

Critical Paths under _pisca_led_yellow in BANK0

    None.

Critical Paths under _pisca_led_green in BANK0

    None.

Critical Paths under _nojoTaskIdle in BANK0

    None.

Critical Paths under _nojoTaskIdle in BANK0

    None.

Critical Paths under _timer_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pisca_led_red in BANK1

    None.

Critical Paths under _pisca_led_yellow in BANK1

    None.

Critical Paths under _pisca_led_green in BANK1

    None.

Critical Paths under _nojoTaskIdle in BANK1

    None.

Critical Paths under _nojoTaskIdle in BANK1

    None.

Critical Paths under _timer_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pisca_led_red in BANK2

    None.

Critical Paths under _pisca_led_yellow in BANK2

    None.

Critical Paths under _pisca_led_green in BANK2

    None.

Critical Paths under _nojoTaskIdle in BANK2

    None.

Critical Paths under _nojoTaskIdle in BANK2

    None.

Critical Paths under _timer_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pisca_led_red in BANK3

    None.

Critical Paths under _pisca_led_yellow in BANK3

    None.

Critical Paths under _pisca_led_green in BANK3

    None.

Critical Paths under _nojoTaskIdle in BANK3

    None.

Critical Paths under _nojoTaskIdle in BANK3

    None.

Critical Paths under _timer_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pisca_led_red in BANK4

    None.

Critical Paths under _pisca_led_yellow in BANK4

    None.

Critical Paths under _pisca_led_green in BANK4

    None.

Critical Paths under _nojoTaskIdle in BANK4

    None.

Critical Paths under _nojoTaskIdle in BANK4

    None.

Critical Paths under _timer_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pisca_led_red in BANK5

    None.

Critical Paths under _pisca_led_yellow in BANK5

    None.

Critical Paths under _pisca_led_green in BANK5

    None.

Critical Paths under _nojoTaskIdle in BANK5

    None.

Critical Paths under _nojoTaskIdle in BANK5

    None.

Critical Paths under _timer_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6053
                      _nojoScheduler
                          _nojoStart
                     _nojoTaskCreate
                         _setupTimer
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nojoTaskCreate                                      14     4     10    5865
                                              6 COMRAM    14     4     10
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    5049
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _nojoStart                                            0     0      0     188
                 _delay_queue_create
 ---------------------------------------------------------------------------------
 (2) _delay_queue_create                                   6     4      2     188
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _nojoScheduler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _pisca_led_red                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _pisca_led_yellow                                     1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _pisca_led_green                                      1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _nojoTaskIdle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _nojoTaskIdle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_ISR                                           18    18      0    2597
                                             38 COMRAM    18    18      0
                     _nojoDispatcher
                         _resetTimer
 ---------------------------------------------------------------------------------
 (5) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _nojoDispatcher                                      12    12      0    2597
                                             26 COMRAM    12    12      0
                 _priority_scheduler
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) _priority_scheduler                                  20    16      4    1333
                                              6 COMRAM    20    16      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4    1197
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nojoScheduler
   _nojoStart
     _delay_queue_create
   _nojoTaskCreate
     ___wmul
   _setupTimer

 _pisca_led_red (ROOT)

 _pisca_led_yellow (ROOT)

 _pisca_led_green (ROOT)

 _nojoTaskIdle (ROOT)

 _nojoTaskIdle (ROOT)

 _timer_ISR (ROOT)
   _nojoDispatcher
     _priority_scheduler
       i2___wmul
     i2___wmul
   _resetTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     1C8      17       29.7%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3       3       5        2.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      57       1       69.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      15        0.0%
DATA                 0      0     222       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Dec  5 22:50:09 2017

                                   BSR 000FE0                                     l51 0A3A  
                                   l27 0924                                     l45 0A64  
                                   l39 0AB2                    ___wmul@multiplicand 0003  
                          __CFG_OSC$HS 000000                                    l220 09D6  
                                  l222 0A0A                                    u280 0682  
                                  u285 0678                                    wreg 000FE8  
                   _priority_scheduler 06F4                           __CFG_WDT$OFF 000000  
                                 l1091 09C6                                   i2l94 024A  
                                 i2l95 00A6                                   i2l99 04F6  
                                 _TMR0 000FD6                                   _TOSH 000FFE  
                                 _TOSL 000FFD                                   _TOSU 000FFF  
                                 _tBSR 003A                                   _main 0894  
                  ?_priority_scheduler 0007                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 0058                    delay_queue_create@i 0005  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                           ___param_bank 000000  
             __size_of_pisca_led_green 002A                                  STATUS 000FD8  
                                ?_main 0001                   ??_priority_scheduler 000B  
                                i2l100 0356                                  i2l140 0848  
                                i2l146 07C4                                  i2l147 0716  
                                i2l149 07B8                                  u40_20 0A42  
                                u40_26 0A44                                  u38_20 0ABA  
                                u38_26 0ABC                                  u39_20 0A6C  
                                u39_26 0A6E                         _nojoDispatcher 0012  
                                _tWORK 003B                                  pclath 000FFA  
                                tablat 000FF5                  __end_of_nojoScheduler 0B2C  
                     __end_ofi2___wmul 0AFA                                  status 000FD8  
                                wtemp6 0059                        __initialization 0A0C  
                         __end_of_main 0928                  __end_of_pisca_led_red 0AD4  
                               ??_main 0015                          __activetblptr 000000  
               __end_of_nojoDispatcher 0532                         _nojoTaskCreate 0532  
                               _TMR0ON 007EAF                                 _STKPTR 000FFC  
             __end_of_pisca_led_yellow 0A88                                 ___wmul 0A88  
                               clear_0 0A14                                 clear_1 0A26  
      priority_scheduler@pos_next_task 0013                        ?_nojoDispatcher 0001  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                      ??_pisca_led_green 0082  
               __end_of_nojoTaskCreate 06F4                             __accesstop 0080  
              __end_of__initialization 0A2C                          ___rparam_used 000001  
                       __pcstackCOMRAM 0001                              ?i2___wmul 0001  
                      ?_nojoTaskCreate 0007            __size_of_delay_queue_create 0062  
                        ?_nojoTaskIdle 0001                                ?___wmul 0001  
                   __size_of_nojoStart 0082                             ??i2___wmul 0005  
                   __size_of_timer_ISR 088C                                _F_APTOS 0083  
                              _Q_DELAY 003C                         ??_nojoTaskIdle 0080  
                              __Hparam 0000                                __Lparam 0000  
               nojoTaskCreate@task_PTR 000F                        __size_of___wmul 0026  
                              _tSTATUS 0039                                __pcinit 0A0C  
                              __ramtop 0600                                __ptext0 0894  
                              __ptext1 0AFA                                __ptext2 0532  
                              __ptext3 0A88                                __ptext4 0928  
                              __ptext5 09AA                                __ptext6 0B20  
                              __ptext7 0AAE                                __ptext8 0A60  
                              __ptext9 0A36                              _T0CONbits 000FD5  
          __size_of_priority_scheduler 00FA                    priority_scheduler@i 0017  
                       __pintcode_body 07EE                   end_of_initialization 0A2C  
                    __end_of_nojoStart 09AA                                int_func 07EE  
                  i2___wmul@multiplier 0001  delay_queue_create@delay_queue_handler 0001  
                    __end_of_timer_ISR 0894                             _resetTimer 0B2C  
               nojoDispatcher@task_pos 0023                                postdec1 000FE5  
                              postdec2 000FDD                      ?_pisca_led_yellow 0001  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                       ??_nojoDispatcher 001B  
                      _pisca_led_green 0A36                     ??_pisca_led_yellow 0081  
                            _PORTDbits 000F83                 __size_of_nojoScheduler 000C  
                           _setupTimer 0AFA                              _TRISDbits 000F95  
               __size_of_pisca_led_red 0026                         __end_of___wmul 0AAE  
                     i2___wmul@product 0005                       ??_nojoTaskCreate 0011  
                 __end_of_nojoTaskIdle 0B20                    start_initialization 0A0C  
                    __size_ofi2___wmul 0026                          _nojoScheduler 0B20  
                          ?_resetTimer 0001                __end_of_pisca_led_green 0A60  
                     nojoTaskCreate@id 0007                               ??___wmul 0005  
                        _pisca_led_red 0AAE                            ?_setupTimer 0001  
                          __pbssBIGRAM 0083                            __pbssCOMRAM 0039  
                        __pcstackBANK0 0080                         ?_nojoScheduler 0001  
           __end_of_delay_queue_create 0A0C                              __pintcode 0008  
                       ?_pisca_led_red 0001                    nojoDispatcher@state 0022  
                  __size_of_resetTimer 000C                         ___wmul@product 0005  
                             _LATDbits 000F8C                    __size_of_setupTimer 0016  
                            _nojoStart 0928                       ?_pisca_led_green 0001  
                            _timer_ISR 0008                  __size_of_nojoTaskIdle 0010  
           __end_of_priority_scheduler 07EE                      ___wmul@multiplier 0001  
                             i2___wmul 0AD4              __size_of_pisca_led_yellow 0028  
                      ??_nojoScheduler 0001                             ?_nojoStart 0001  
                         _nojoTaskIdle 0B10                               __Hrparam 0000  
                             __Lrparam 0000                    nojoTaskCreate@prior 000B  
                           ?_timer_ISR 0001                        ??_pisca_led_red 0080  
                i2___wmul@multiplicand 0003                               __ptext10 0B10  
                             __ptext12 0B2C                               __ptext13 0012  
                             __ptext14 06F4                               __ptext15 0AD4  
                             __ptext16 0000                          __size_of_main 0094  
                         ??_resetTimer 0001                               int$flags 0058  
                         ??_setupTimer 0001                             _INTCONbits 000FF2  
              __size_of_nojoDispatcher 0520                     __end_of_resetTimer 0B38  
                             intlevel1 0000                               intlevel2 0000  
                          ??_nojoStart 0007                     __end_of_setupTimer 0B10  
                          ??_timer_ISR 0027                     _delay_queue_create 09AA  
                  ?_delay_queue_create 0001                       _pisca_led_yellow 0A60  
              __size_of_nojoTaskCreate 01C2                   ??_delay_queue_create 0003  
